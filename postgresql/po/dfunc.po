msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-04-29 18:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: xml/dfunc.xml:3(title)
msgid "Compiling and Linking Dynamically-loaded Functions"
msgstr ""

#: xml/dfunc.xml:4(para)
msgid "Before you are able to use your <productname>PostgreSQL</productname>extension functions written in C, they must be compiled and linked in a special way to produce a file that can be dynamically loaded by the server. To be precise, a <firstterm>shared library</firstterm>needs to be created. <indexterm><primary>shared library</primary></indexterm>"
msgstr ""

#: xml/dfunc.xml:13(para)
msgid "For information beyond what is contained in this section you should read the documentation of your operating system, in particular the manual pages for the C compiler, <command>cc</command>, and the link editor, <command>ld</command>. In addition, the <productname>PostgreSQL</productname>source code contains several working examples in the <filename>contrib</filename>directory. If you rely on these examples you will make your modules dependent on the availability of the <productname>PostgreSQL</productname>source code, however."
msgstr ""

#: xml/dfunc.xml:24(para)
msgid "Creating shared libraries is generally analogous to linking executables: first the source files are compiled into object files, then the object files are linked together. The object files need to be created as <firstterm>position-independent code</firstterm>( <acronym>PIC</acronym>), <indexterm><primary>PIC</primary></indexterm>which conceptually means that they can be placed at an arbitrary location in memory when they are loaded by the executable. (Object files intended for executables are usually not compiled that way.) The command to link a shared library contains special flags to distinguish it from linking an executable (at least in theory on some systems the practice is much uglier)."
msgstr ""

#: xml/dfunc.xml:39(para)
msgid "In the following examples we assume that your source code is in a file <filename>foo.c</filename>and we will create a shared library <filename>foo.so</filename>. The intermediate object file will be called <filename>foo.o</filename>unless otherwise noted. A shared library can contain more than one object file, but we only use one here."
msgstr ""

#: xml/dfunc.xml:50(systemitem) xml/dfunc.xml:52(primary)
msgid "FreeBSD"
msgstr ""

#: xml/dfunc.xml:53(secondary) xml/dfunc.xml:73(secondary) xml/dfunc.xml:99(secondary) xml/dfunc.xml:122(secondary) xml/dfunc.xml:137(secondary) xml/dfunc.xml:157(secondary) xml/dfunc.xml:175(secondary) xml/dfunc.xml:199(secondary)
msgid "shared library"
msgstr ""

#: xml/dfunc.xml:62(programlisting) xml/dfunc.xml:148(programlisting) xml/dfunc.xml:214(programlisting)
#, no-wrap
msgid "gcc -fpic -c foo.c gcc -shared -o foo.so\n        foo.o"
msgstr ""

#: xml/dfunc.xml:57(para)
msgid "The compiler flag to create <acronym>PIC</acronym>is <option>-fpic</option>. To create shared libraries the compiler flag is <option>-shared</option>. <placeholder-1/>This is applicable as of version 3.0 of <systemitem class=\"osname\">FreeBSD</systemitem>."
msgstr ""

#: xml/dfunc.xml:70(systemitem) xml/dfunc.xml:72(primary)
msgid "HP-UX"
msgstr ""

#: xml/dfunc.xml:84(programlisting)
#, no-wrap
msgid "cc +z -c foo.c"
msgstr ""

#: xml/dfunc.xml:85(programlisting)
#, no-wrap
msgid "gcc -fpic -c foo.c"
msgstr ""

#: xml/dfunc.xml:87(programlisting)
#, no-wrap
msgid "ld -b -o foo.sl foo.o"
msgstr ""

#: xml/dfunc.xml:77(para)
msgid "The compiler flag of the system compiler to create <acronym>PIC</acronym>is <option>+z</option>. When using <application>GCC</application>it's <option>-fpic</option>. The linker flag for shared libraries is <option>-b</option>. So: <placeholder-1/>or: <placeholder-2/>and then: <placeholder-3/><systemitem class=\"osname\">HP-UX</systemitem>uses the extension <filename>.sl</filename>for shared libraries, unlike most other systems."
msgstr ""

#: xml/dfunc.xml:96(systemitem) xml/dfunc.xml:98(primary)
msgid "Linux"
msgstr ""

#: xml/dfunc.xml:113(programlisting)
#, no-wrap
msgid "cc -fpic -c foo.c cc -shared -o foo.so\n        foo.o"
msgstr ""

#: xml/dfunc.xml:103(para)
msgid "The compiler flag to create <acronym>PIC</acronym>is <option>-fpic</option>. On some platforms in some situations <option>-fPIC</option>must be used if <option>-fpic</option>does not work. Refer to the GCC manual for more information. The compiler flag to create a shared library is <option>-shared</option>. A complete example looks like this: <placeholder-1/>"
msgstr ""

#: xml/dfunc.xml:119(systemitem) xml/dfunc.xml:121(primary)
msgid "OS X"
msgstr ""

#: xml/dfunc.xml:128(programlisting)
#, no-wrap
msgid "cc -c foo.c cc -bundle -flat_namespace\n        -undefined suppress -o foo.so foo.o"
msgstr ""

#: xml/dfunc.xml:126(para)
msgid "Here is an example. It assumes the developer tools are installed. <placeholder-1/>"
msgstr ""

#: xml/dfunc.xml:134(systemitem) xml/dfunc.xml:136(primary)
msgid "NetBSD"
msgstr ""

#: xml/dfunc.xml:141(para)
msgid "The compiler flag to create <acronym>PIC</acronym>is <option>-fpic</option>. For <acronym>ELF</acronym>systems, the compiler with the flag <option>-shared</option>is used to link shared libraries. On the older non-ELF systems, <literal>ld -Bshareable</literal>is used. <placeholder-1/>"
msgstr ""

#: xml/dfunc.xml:154(systemitem) xml/dfunc.xml:156(primary)
msgid "OpenBSD"
msgstr ""

#: xml/dfunc.xml:166(programlisting)
#, no-wrap
msgid "gcc -fpic -c foo.c ld -Bshareable -o foo.so\n        foo.o"
msgstr ""

#: xml/dfunc.xml:161(para)
msgid "The compiler flag to create <acronym>PIC</acronym>is <option>-fpic</option>. <literal>ld -Bshareable</literal>is used to link shared libraries. <placeholder-1/>"
msgstr ""

#: xml/dfunc.xml:172(systemitem) xml/dfunc.xml:174(primary)
msgid "Solaris"
msgstr ""

#: xml/dfunc.xml:188(programlisting)
#, no-wrap
msgid "cc -KPIC -c foo.c cc -G -o foo.so\n        foo.o"
msgstr ""

#: xml/dfunc.xml:190(programlisting)
#, no-wrap
msgid "gcc -fpic -c foo.c gcc -G -o foo.so\n        foo.o"
msgstr ""

#: xml/dfunc.xml:179(para)
msgid "The compiler flag to create <acronym>PIC</acronym>is <option>-KPIC</option>with the Sun compiler and <option>-fpic</option>with <application>GCC</application>. To link shared libraries, the compiler option is <option>-G</option>with either compiler or alternatively <option>-shared</option>with <application>GCC</application>. <placeholder-1/>or <placeholder-2/>"
msgstr ""

#: xml/dfunc.xml:196(systemitem) xml/dfunc.xml:198(primary)
msgid "UnixWare"
msgstr ""

#: xml/dfunc.xml:212(programlisting)
#, no-wrap
msgid "cc -K PIC -c foo.c cc -G -o foo.so\n        foo.o"
msgstr ""

#: xml/dfunc.xml:203(para)
msgid "The compiler flag to create <acronym>PIC</acronym>is <option>-K PIC</option>with the SCO compiler and <option>-fpic</option>with <productname>GCC</productname>. To link shared libraries, the compiler option is <option>-G</option>with the SCO compiler and <option>-shared</option>with <productname>GCC</productname>. <placeholder-1/>or <placeholder-2/>"
msgstr ""

#: xml/dfunc.xml:220(para)
msgid "If this is too complicated for you, you should consider using <ulink url=\"http://www.gnu.org/software/libtool/\"><productname>GNU Libtool</productname></ulink>, which hides the platform differences behind a uniform interface."
msgstr ""

#: xml/dfunc.xml:227(para)
msgid "The resulting shared library file can then be loaded into <productname>PostgreSQL</productname>. When specifying the file name to the <command>CREATE FUNCTION</command>command, one must give it the name of the shared library file, not the intermediate object file. Note that the system's standard shared-library extension (usually <literal>.so</literal>or <literal>.sl</literal>) can be omitted from the <command>CREATE FUNCTION</command>command, and normally should be omitted for best portability."
msgstr ""

#: xml/dfunc.xml:238(para)
msgid "Refer back to <xref linkend=\"xfunc-c-dynload\">about where the server expects to find the shared library files.</xref>"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: xml/dfunc.xml:0(None)
msgid "translator-credits"
msgstr ""


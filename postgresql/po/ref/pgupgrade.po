msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-04-29 18:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: xml/ref/pgupgrade.xml:4(primary) xml/ref/pgupgrade.xml:8(application) xml/ref/pgupgrade.xml:14(refname) xml/ref/pgupgrade.xml:21(command)
msgid "pg_upgrade"
msgstr ""

#: xml/ref/pgupgrade.xml:10(manvolnum)
msgid "1"
msgstr ""

#: xml/ref/pgupgrade.xml:11(refmiscinfo)
msgid "Application"
msgstr ""

#: xml/ref/pgupgrade.xml:16(productname)
msgid "PostgreSQL"
msgstr ""

#: xml/ref/pgupgrade.xml:15(refpurpose)
msgid "upgrade a <placeholder-1/>server instance"
msgstr ""

#: xml/ref/pgupgrade.xml:23(option) xml/ref/pgupgrade.xml:94(option)
msgid "-b"
msgstr ""

#: xml/ref/pgupgrade.xml:26(replaceable)
msgid "oldbindir"
msgstr ""

#: xml/ref/pgupgrade.xml:29(option) xml/ref/pgupgrade.xml:109(option)
msgid "-B"
msgstr ""

#: xml/ref/pgupgrade.xml:32(replaceable)
msgid "newbindir"
msgstr ""

#: xml/ref/pgupgrade.xml:35(option) xml/ref/pgupgrade.xml:135(option)
msgid "-d"
msgstr ""

#: xml/ref/pgupgrade.xml:38(replaceable)
msgid "olddatadir"
msgstr ""

#: xml/ref/pgupgrade.xml:41(option) xml/ref/pgupgrade.xml:150(option)
msgid "-D"
msgstr ""

#: xml/ref/pgupgrade.xml:44(replaceable)
msgid "newdatadir"
msgstr ""

#: xml/ref/pgupgrade.xml:47(replaceable)
msgid "option"
msgstr ""

#: xml/ref/pgupgrade.xml:52(title)
msgid "Description"
msgstr ""

#: xml/ref/pgupgrade.xml:53(para)
msgid "<application>pg_upgrade</application>(formerly called <application>pg_migrator</application>) allows data stored in <productname>PostgreSQL</productname>data files to be upgraded to a later <productname>PostgreSQL</productname>major version without the data dump/reload typically required for major version upgrades, e.g. from 8.4.7 to the current major release of <productname>PostgreSQL</productname>. It is not required for minor version upgrades, e.g. from 9.0.1 to 9.0.4."
msgstr ""

#: xml/ref/pgupgrade.xml:63(para)
msgid "Major PostgreSQL releases regularly add new features that often change the layout of the system tables, but the internal data storage format rarely changes. <application>pg_upgrade</application>uses this fact to perform rapid upgrades by creating new system tables and simply reusing the old user data files. If a future major release ever changes the data storage format in a way that makes the old data format unreadable, <application>pg_upgrade</application>will not be usable for such upgrades. (The community will attempt to avoid such situations.)"
msgstr ""

#: xml/ref/pgupgrade.xml:74(para)
msgid "<application>pg_upgrade</application>does its best to make sure the old and new clusters are binary-compatible, e.g. by checking for compatible compile-time settings, including 32/64-bit binaries. It is important that any external modules are also binary compatible, though this cannot be checked by <application>pg_upgrade</application>."
msgstr ""

#: xml/ref/pgupgrade.xml:81(para)
msgid "pg_upgrade supports upgrades from 8.4.X and later to the current major release of <productname>PostgreSQL</productname>, including snapshot and alpha releases."
msgstr ""

#: xml/ref/pgupgrade.xml:87(title)
msgid "Options"
msgstr ""

#: xml/ref/pgupgrade.xml:95(replaceable) xml/ref/pgupgrade.xml:99(replaceable) xml/ref/pgupgrade.xml:110(replaceable) xml/ref/pgupgrade.xml:114(replaceable)
msgid "bindir"
msgstr ""

#: xml/ref/pgupgrade.xml:98(option)
msgid "--old-bindir="
msgstr ""

#: xml/ref/pgupgrade.xml:102(para)
msgid "the old PostgreSQL executable directory; environment variable <envar>PGBINOLD</envar>"
msgstr ""

#: xml/ref/pgupgrade.xml:113(option)
msgid "--new-bindir="
msgstr ""

#: xml/ref/pgupgrade.xml:117(para)
msgid "the new PostgreSQL executable directory; environment variable <envar>PGBINNEW</envar>"
msgstr ""

#: xml/ref/pgupgrade.xml:124(option)
msgid "-c"
msgstr ""

#: xml/ref/pgupgrade.xml:127(option)
msgid "--check"
msgstr ""

#: xml/ref/pgupgrade.xml:130(para)
msgid "check clusters only, don't change any data"
msgstr ""

#: xml/ref/pgupgrade.xml:136(replaceable) xml/ref/pgupgrade.xml:140(replaceable) xml/ref/pgupgrade.xml:151(replaceable) xml/ref/pgupgrade.xml:155(replaceable)
msgid "datadir"
msgstr ""

#: xml/ref/pgupgrade.xml:139(option)
msgid "--old-datadir="
msgstr ""

#: xml/ref/pgupgrade.xml:143(para)
msgid "the old cluster data directory; environment variable <envar>PGDATAOLD</envar>"
msgstr ""

#: xml/ref/pgupgrade.xml:154(option)
msgid "--new-datadir="
msgstr ""

#: xml/ref/pgupgrade.xml:158(para)
msgid "the new cluster data directory; environment variable <envar>PGDATANEW</envar>"
msgstr ""

#: xml/ref/pgupgrade.xml:165(option)
msgid "-j"
msgstr ""

#: xml/ref/pgupgrade.xml:168(option)
msgid "--jobs"
msgstr ""

#: xml/ref/pgupgrade.xml:171(para)
msgid "number of simultaneous processes or threads to use"
msgstr ""

#: xml/ref/pgupgrade.xml:177(option)
msgid "-k"
msgstr ""

#: xml/ref/pgupgrade.xml:180(option)
msgid "--link"
msgstr ""

#: xml/ref/pgupgrade.xml:183(para)
msgid "use hard links instead of copying files to the new cluster (use junction points on Windows)"
msgstr ""

#: xml/ref/pgupgrade.xml:189(option)
msgid "-o"
msgstr ""

#: xml/ref/pgupgrade.xml:190(replaceable) xml/ref/pgupgrade.xml:194(replaceable) xml/ref/pgupgrade.xml:205(replaceable) xml/ref/pgupgrade.xml:209(replaceable)
msgid "options"
msgstr ""

#: xml/ref/pgupgrade.xml:193(option)
msgid "--old-options"
msgstr ""

#: xml/ref/pgupgrade.xml:197(para)
msgid "options to be passed directly to the old <command>postgres</command>command; multiple option invocations are appended"
msgstr ""

#: xml/ref/pgupgrade.xml:204(option)
msgid "-O"
msgstr ""

#: xml/ref/pgupgrade.xml:208(option)
msgid "--new-options"
msgstr ""

#: xml/ref/pgupgrade.xml:212(para)
msgid "options to be passed directly to the new <command>postgres</command>command; multiple option invocations are appended"
msgstr ""

#: xml/ref/pgupgrade.xml:219(option)
msgid "-p"
msgstr ""

#: xml/ref/pgupgrade.xml:220(replaceable) xml/ref/pgupgrade.xml:224(replaceable) xml/ref/pgupgrade.xml:234(replaceable) xml/ref/pgupgrade.xml:238(replaceable)
msgid "port"
msgstr ""

#: xml/ref/pgupgrade.xml:223(option)
msgid "--old-port="
msgstr ""

#: xml/ref/pgupgrade.xml:227(para)
msgid "the old cluster port number; environment variable <envar>PGPORTOLD</envar>"
msgstr ""

#: xml/ref/pgupgrade.xml:233(option)
msgid "-P"
msgstr ""

#: xml/ref/pgupgrade.xml:237(option)
msgid "--new-port="
msgstr ""

#: xml/ref/pgupgrade.xml:241(para)
msgid "the new cluster port number; environment variable <envar>PGPORTNEW</envar>"
msgstr ""

#: xml/ref/pgupgrade.xml:247(option)
msgid "-r"
msgstr ""

#: xml/ref/pgupgrade.xml:250(option)
msgid "--retain"
msgstr ""

#: xml/ref/pgupgrade.xml:253(para)
msgid "retain SQL and log files even after successful completion"
msgstr ""

#: xml/ref/pgupgrade.xml:259(option)
msgid "-U"
msgstr ""

#: xml/ref/pgupgrade.xml:260(replaceable) xml/ref/pgupgrade.xml:264(replaceable)
msgid "username"
msgstr ""

#: xml/ref/pgupgrade.xml:263(option)
msgid "--username="
msgstr ""

#: xml/ref/pgupgrade.xml:267(para)
msgid "cluster's install user name; environment variable <envar>PGUSER</envar>"
msgstr ""

#: xml/ref/pgupgrade.xml:273(option)
msgid "-v"
msgstr ""

#: xml/ref/pgupgrade.xml:276(option)
msgid "--verbose"
msgstr ""

#: xml/ref/pgupgrade.xml:279(para)
msgid "enable verbose internal logging"
msgstr ""

#: xml/ref/pgupgrade.xml:284(option)
msgid "-V"
msgstr ""

#: xml/ref/pgupgrade.xml:287(option)
msgid "--version"
msgstr ""

#: xml/ref/pgupgrade.xml:290(para)
msgid "display version information, then exit"
msgstr ""

#: xml/ref/pgupgrade.xml:295(option)
msgid "-?"
msgstr ""

#: xml/ref/pgupgrade.xml:298(option)
msgid "--help"
msgstr ""

#: xml/ref/pgupgrade.xml:301(para)
msgid "show help, then exit"
msgstr ""

#: xml/ref/pgupgrade.xml:88(para)
msgid "<application>pg_upgrade</application>accepts the following command-line arguments: <placeholder-1/>"
msgstr ""

#: xml/ref/pgupgrade.xml:307(title)
msgid "Usage"
msgstr ""

#: xml/ref/pgupgrade.xml:308(para)
msgid "These are the steps to perform an upgrade with <application>pg_upgrade</application>:"
msgstr ""

#: xml/ref/pgupgrade.xml:312(title)
msgid "Optionally move the old cluster"
msgstr ""

#: xml/ref/pgupgrade.xml:313(para)
msgid "If you are using a version-specific installation directory, e.g. <filename>/opt/PostgreSQL/9.1</filename>, you do not need to move the old cluster. The graphical installers all use version-specific installation directories."
msgstr ""

#: xml/ref/pgupgrade.xml:329(programlisting)
#, no-wrap
msgid "mv /usr/local/pgsql\n        /usr/local/pgsql.old"
msgstr ""

#: xml/ref/pgupgrade.xml:318(para)
msgid "If your installation directory is not version-specific, e.g. <filename>/usr/local/pgsql</filename>, it is necessary to move the current PostgreSQL install directory so it does not interfere with the new <productname>PostgreSQL</productname>installation. Once the current <productname>PostgreSQL</productname>server is shut down, it is safe to rename the PostgreSQL installation directory; assuming the old directory is <filename>/usr/local/pgsql</filename>, you can do: <placeholder-1/>to rename the directory."
msgstr ""

#: xml/ref/pgupgrade.xml:334(title)
msgid "For source installs, build the new version"
msgstr ""

#: xml/ref/pgupgrade.xml:335(para)
msgid "Build the new PostgreSQL source with <command>configure</command>flags that are compatible with the old cluster. <application>pg_upgrade</application>will check <command>pg_controldata</command>to make sure all settings are compatible before starting the upgrade."
msgstr ""

#: xml/ref/pgupgrade.xml:343(title)
msgid "Install the new PostgreSQL binaries"
msgstr ""

#: xml/ref/pgupgrade.xml:344(para)
msgid "Install the new server's binaries and support files. <application>pg_upgrade</application>is included in a default installation."
msgstr ""

#: xml/ref/pgupgrade.xml:350(programlisting)
#, no-wrap
msgid "make prefix=/usr/local/pgsql.new\n        install"
msgstr ""

#: xml/ref/pgupgrade.xml:347(para)
msgid "For source installs, if you wish to install the new server in a custom location, use the <literal>prefix</literal>variable: <placeholder-1/>"
msgstr ""

#: xml/ref/pgupgrade.xml:354(title)
msgid "Initialize the new PostgreSQL cluster"
msgstr ""

#: xml/ref/pgupgrade.xml:355(para)
msgid "Initialize the new cluster using <command>initdb</command>. Again, use compatible <command>initdb</command>flags that match the old cluster. Many prebuilt installers do this step automatically. There is no need to start the new cluster."
msgstr ""

#: xml/ref/pgupgrade.xml:362(title) xml/ref/pgupgrade.xml:514(title)
msgid "Install custom shared object files"
msgstr ""

#: xml/ref/pgupgrade.xml:363(para)
msgid "Install any custom shared object files (or DLLs) used by the old cluster into the new cluster, e.g. <filename>pgcrypto.so</filename>, whether they are from <filename>contrib</filename>or some other source. Do not install the schema definitions, e.g. <filename>pgcrypto.sql</filename>, because these will be upgraded from the old cluster. Also, any custom full text search files (dictionary, synonym, thesaurus, stop words) must also be copied to the new cluster."
msgstr ""

#: xml/ref/pgupgrade.xml:374(title)
msgid "Adjust authentication"
msgstr ""

#: xml/ref/pgupgrade.xml:375(para)
msgid "<command>pg_upgrade</command>will connect to the old and new servers several times, so you might want to set authentication to <literal>peer</literal>in <filename>pg_hba.conf</filename>or use a <filename>~/.pgpass</filename>file (see <xref linkend=\"libpq-pgpass\">).</xref>"
msgstr ""

#: xml/ref/pgupgrade.xml:385(title)
msgid "Stop both servers"
msgstr ""

#: xml/ref/pgupgrade.xml:388(programlisting)
#, no-wrap
msgid "pg_ctl -D /opt/PostgreSQL/8.4 stop pg_ctl\n        -D /opt/PostgreSQL/9.0 stop"
msgstr ""

#: xml/ref/pgupgrade.xml:391(programlisting)
#, no-wrap
msgid "NET STOP postgresql-8.4 NET STOP\n        postgresql-9.0"
msgstr ""

#: xml/ref/pgupgrade.xml:386(para)
msgid "Make sure both database servers are stopped using, on Unix, e.g.: <placeholder-1/>or on Windows, using the proper service names: <placeholder-2/>"
msgstr ""

#: xml/ref/pgupgrade.xml:393(para)
msgid "Streaming replication and log-shipping standby servers can remain running until a later step."
msgstr ""

#: xml/ref/pgupgrade.xml:397(title)
msgid "Verify standby servers"
msgstr ""

#: xml/ref/pgupgrade.xml:398(para)
msgid "If you are upgrading Streaming Replication and Log-Shipping standby servers, verify that the old standby servers are caught up by running <application>pg_controldata</application>against the old primary and standby clusters. Verify that the <quote>Latest checkpoint location</quote>values match in all clusters. (There will be a mismatch if old standby servers were shut down before the old primary.)"
msgstr ""

#: xml/ref/pgupgrade.xml:408(title)
msgid "Run <application>pg_upgrade</application>"
msgstr ""

#: xml/ref/pgupgrade.xml:410(para)
msgid "Always run the <application>pg_upgrade</application>binary of the new server, not the old one. <application>pg_upgrade</application>requires the specification of the old and new cluster's data and executable ( <filename>bin</filename>) directories. You can also specify user and port values, and whether you want the data linked instead of copied (the default)."
msgstr ""

#: xml/ref/pgupgrade.xml:419(para)
msgid "If you use link mode, the upgrade will be much faster (no file copying) and use less disk space, but you will not be able to access your old cluster once you start the new cluster after the upgrade. Link mode also requires that the old and new cluster data directories be in the same file system. (Tablespaces and <filename>pg_xlog</filename>can be on different file systems.) See <literal>pg_upgrade --help</literal>for a full list of options."
msgstr ""

#: xml/ref/pgupgrade.xml:429(para)
msgid "The <option>--jobs</option>option allows multiple CPU cores to be used for copying/linking of files and to dump and reload database schemas in parallel; a good place to start is the maximum of the number of CPU cores and tablespaces. This option can dramatically reduce the time to upgrade a multi-database server running on a multiprocessor machine."
msgstr ""

#: xml/ref/pgupgrade.xml:440(programlisting)
#, no-wrap
msgid "RUNAS /USER:postgres \"CMD.EXE\" SET\n        PATH=%PATH%;C:\\Program\n        Files\\PostgreSQL\\9.0\\bin;"
msgstr ""

#: xml/ref/pgupgrade.xml:445(programlisting)
#, no-wrap
msgid "pg_upgrade.exe --old-datadir \"C:/Program\n        Files/PostgreSQL/8.4/data\" --new-datadir \"C:/Program\n        Files/PostgreSQL/9.0/data\" --old-bindir \"C:/Program\n        Files/PostgreSQL/8.4/bin\" --new-bindir \"C:/Program\n        Files/PostgreSQL/9.0/bin\""
msgstr ""

#: xml/ref/pgupgrade.xml:437(para)
msgid "For Windows users, you must be logged into an administrative account, and then start a shell as the <literal>postgres</literal>user and set the proper path: <placeholder-1/>and then run <application>pg_upgrade</application>with quoted directories, e.g.: <placeholder-2/>Once started, <command>pg_upgrade</command>will verify the two clusters are compatible and then do the upgrade. You can use <command>pg_upgrade --check</command>to perform only the checks, even if the old server is still running. <command>pg_upgrade --check</command>will also outline any manual adjustments you will need to make after the upgrade. If you are going to be using link mode, you should use the <option>--link</option>option with <option>--check</option>to enable link-mode-specific checks. <command>pg_upgrade</command>requires write permission in the current directory."
msgstr ""

#: xml/ref/pgupgrade.xml:462(para)
msgid "Obviously, no one should be accessing the clusters during the upgrade. <application>pg_upgrade</application>defaults to running servers on port 50432 to avoid unintended client connections. You can use the same port number for both clusters when doing an upgrade because the old and new clusters will not be running at the same time. However, when checking an old running server, the old and new port numbers must be different."
msgstr ""

#: xml/ref/pgupgrade.xml:471(para)
msgid "If an error occurs while restoring the database schema, <command>pg_upgrade</command>will exit and you will have to revert to the old cluster as outlined in <xref linkend=\"pgupgrade-step-revert\">below. To try <command>pg_upgrade</command>again, you will need to modify the old cluster so the pg_upgrade schema restore succeeds. If the problem is a <filename>contrib</filename>module, you might need to uninstall the <filename>contrib</filename>module from the old cluster and install it in the new cluster after the upgrade, assuming the module is not being used to store user data.</xref>"
msgstr ""

#: xml/ref/pgupgrade.xml:487(title)
msgid "Upgrade Streaming Replication and Log-Shipping standby servers"
msgstr ""

#: xml/ref/pgupgrade.xml:489(para)
msgid "If you have Streaming Replication (see <xref linkend=\"streaming-replication\">) or Log-Shipping (see <xref linkend=\"warm-standby\">) standby servers, follow these steps to upgrade them. You will not be running <application>pg_upgrade</application>on the standby servers, but rather <application>rsync</application>. Do not start any servers yet.</xref></xref>"
msgstr ""

#: xml/ref/pgupgrade.xml:500(title)
msgid "Install the new PostgreSQL binaries on standby servers"
msgstr ""

#: xml/ref/pgupgrade.xml:502(para)
msgid "Make sure the new binaries and support files are installed on all standby servers."
msgstr ""

#: xml/ref/pgupgrade.xml:506(title)
msgid "Make sure the new standby data directories do <emphasis>not</emphasis>exist"
msgstr ""

#: xml/ref/pgupgrade.xml:508(para)
msgid "Make sure the new standby data directories do <emphasis>not</emphasis>exist or are empty. If <application>initdb</application>was run, delete the standby server data directories."
msgstr ""

#: xml/ref/pgupgrade.xml:515(para)
msgid "Install the same custom shared object files on the new standbys that you installed in the new master cluster."
msgstr ""

#: xml/ref/pgupgrade.xml:520(title)
msgid "Stop standby servers"
msgstr ""

#: xml/ref/pgupgrade.xml:521(para)
msgid "If the standby servers are still running, stop them now using the above instructions."
msgstr ""

#: xml/ref/pgupgrade.xml:525(title)
msgid "Save configuration files"
msgstr ""

#: xml/ref/pgupgrade.xml:526(para)
msgid "Save any configuration files from the standbys you need to keep, e.g. <filename>postgresql.conf</filename>, <literal>recovery.conf</literal>, as these will be overwritten or removed in the next step."
msgstr ""

#: xml/ref/pgupgrade.xml:533(title)
msgid "Start and stop the new master cluster"
msgstr ""

#: xml/ref/pgupgrade.xml:534(para)
msgid "In the new master cluster, change <varname>wal_level</varname>to <literal>hot_standby</literal>in the <filename>postgresql.conf</filename>file and then start and stop the cluster."
msgstr ""

#: xml/ref/pgupgrade.xml:541(title)
msgid "Run <application>rsync</application>"
msgstr ""

#: xml/ref/pgupgrade.xml:545(programlisting)
#, no-wrap
msgid "rsync --archive --delete --hard-links\n            --size-only old_pgdata new_pgdata\n            remote_dir"
msgstr ""

#: xml/ref/pgupgrade.xml:543(para)
msgid "From a directory that is above the old and new database cluster directories, run this for each slave: <placeholder-1/>where <option>old_pgdata</option>and <option>new_pgdata</option>are relative to the current directory, and <option>remote_dir</option>is <emphasis>above</emphasis>the old and new cluster directories on the standby server. The old and new relative cluster paths must match on the master and standby server. Consult the <application>rsync</application>manual page for details on specifying the remote directory, e.g. <literal>standbyhost:/opt/PostgreSQL/</literal>. <application>rsync</application>will be fast when <application>pg_upgrade</application>'s <option>--link</option>mode is used because it will create hard links on the remote server rather than transferring user data."
msgstr ""

#: xml/ref/pgupgrade.xml:564(para)
msgid "If you have tablespaces, you will need to run a similar <application>rsync</application>command for each tablespace directory. If you have relocated <filename>pg_xlog</filename>outside the data directories, <application>rsync</application>must be run on those directories too."
msgstr ""

#: xml/ref/pgupgrade.xml:574(title)
msgid "Configure streaming replication and log-shipping standby servers"
msgstr ""

#: xml/ref/pgupgrade.xml:576(para)
msgid "Configure the servers for log shipping. (You do not need to run <function>pg_start_backup()</function>and <function>pg_stop_backup()</function>or take a file system backup as the slaves are still synchronized with the master.)"
msgstr ""

#: xml/ref/pgupgrade.xml:586(title)
msgid "Restore <filename>pg_hba.conf</filename>"
msgstr ""

#: xml/ref/pgupgrade.xml:588(para)
msgid "If you modified <filename>pg_hba.conf</filename>, restore its original settings. It might also be necessary to adjust other configuration files in the new cluster to match the old cluster, e.g. <filename>postgresql.conf</filename>."
msgstr ""

#: xml/ref/pgupgrade.xml:596(title)
msgid "Start the new server"
msgstr ""

#: xml/ref/pgupgrade.xml:597(para)
msgid "The new server can now be safely started, and then any <application>rsync</application>'ed standby servers."
msgstr ""

#: xml/ref/pgupgrade.xml:602(title)
msgid "Post-Upgrade processing"
msgstr ""

#: xml/ref/pgupgrade.xml:609(programlisting)
#, no-wrap
msgid "psql --username postgres --file script.sql\n        postgres"
msgstr ""

#: xml/ref/pgupgrade.xml:603(para)
msgid "If any post-upgrade processing is required, pg_upgrade will issue warnings as it completes. It will also generate script files that must be run by the administrator. The script files will connect to each database that needs post-upgrade processing. Each script should be run using: <placeholder-1/>The scripts can be run in any order and can be deleted once they have been run."
msgstr ""

#: xml/ref/pgupgrade.xml:613(para)
msgid "In general it is unsafe to access tables referenced in rebuild scripts until the rebuild scripts have run to completion; doing so could yield incorrect results or poor performance. Tables not referenced in rebuild scripts can be accessed immediately."
msgstr ""

#: xml/ref/pgupgrade.xml:621(title)
msgid "Statistics"
msgstr ""

#: xml/ref/pgupgrade.xml:622(para)
msgid "Because optimizer statistics are not transferred by <command>pg_upgrade</command>, you will be instructed to run a command to regenerate that information at the end of the upgrade. You might need to set connection parameters to match your new cluster."
msgstr ""

#: xml/ref/pgupgrade.xml:629(title)
msgid "Delete old cluster"
msgstr ""

#: xml/ref/pgupgrade.xml:630(para)
msgid "Once you are satisfied with the upgrade, you can delete the old cluster's data directories by running the script mentioned when <command>pg_upgrade</command>completes. (Automatic deletion is not possible if you have user-defined tablespaces inside the old data directory.) You can also delete the old installation directories (e.g. <filename>bin</filename>, <filename>share</filename>)."
msgstr ""

#: xml/ref/pgupgrade.xml:641(title)
msgid "Reverting to old cluster"
msgstr ""

#: xml/ref/pgupgrade.xml:647(para)
msgid "If you ran <command>pg_upgrade</command>with <option>--check</option>, no modifications were made to the old cluster and you can re-use it anytime."
msgstr ""

#: xml/ref/pgupgrade.xml:653(para)
msgid "If you ran <command>pg_upgrade</command>with <option>--link</option>, the data files are shared between the old and new cluster. If you started the new cluster, the new server has written to those shared files and it is unsafe to use the old cluster."
msgstr ""

#: xml/ref/pgupgrade.xml:661(para)
msgid "If you ran <command>pg_upgrade</command><emphasis>without</emphasis><option>--link</option>or did not start the new server, the old cluster was not modified except that, if linking started, a <literal>.old</literal>suffix was appended to <filename>$PGDATA/global/pg_control</filename>. To reuse the old cluster, possibly remove the <filename>.old</filename>suffix from <filename>$PGDATA/global/pg_control</filename>; you can then restart the old cluster."
msgstr ""

#: xml/ref/pgupgrade.xml:642(para)
msgid "If, after running <command>pg_upgrade</command>, you wish to revert to the old cluster, there are several options: <placeholder-1/>"
msgstr ""

#: xml/ref/pgupgrade.xml:679(title)
msgid "Notes"
msgstr ""

#: xml/ref/pgupgrade.xml:680(para)
msgid "<application>pg_upgrade</application>does not support upgrading of databases containing these <type>reg*</type>OID-referencing system data types: <type>regproc</type>, <type>regprocedure</type>, <type>regoper</type>, <type>regoperator</type>, <type>regconfig</type>, and <type>regdictionary</type>. ( <type>regtype</type>can be upgraded.)"
msgstr ""

#: xml/ref/pgupgrade.xml:691(para)
msgid "All failure, rebuild, and reindex cases will be reported by <application>pg_upgrade</application>if they affect your installation; post-upgrade scripts to rebuild tables and indexes will be generated automatically. If you are trying to automate the upgrade of many clusters, you should find that clusters with identical database schemas require the same post-upgrade steps for all cluster upgrades; this is because the post-upgrade steps are based on the database schemas, and not user data."
msgstr ""

#: xml/ref/pgupgrade.xml:701(para)
msgid "For deployment testing, create a schema-only copy of the old cluster, insert dummy data, and upgrade that."
msgstr ""

#: xml/ref/pgupgrade.xml:703(para)
msgid "If you are upgrading a pre- <productname>PostgreSQL</productname>9.2 cluster that uses a configuration-file-only directory, you must pass the real data directory location to <application>pg_upgrade</application>, and pass the configuration directory location to the server, e.g. <literal>-d /real-data-directory -o '-D /configuration-directory'</literal>."
msgstr ""

#: xml/ref/pgupgrade.xml:711(para)
msgid "If using a pre-9.1 old server that is using a non-default Unix-domain socket directory or a default that differs from the default of the new cluster, set <envar>PGHOST</envar>to point to the old server's socket location. (This is not relevant on Windows.)"
msgstr ""

#: xml/ref/pgupgrade.xml:716(para)
msgid "If you want to use link mode and you do not want your old cluster to be modified when the new cluster is started, make a copy of the old cluster and upgrade that in link mode. To make a valid copy of the old cluster, use <command>rsync</command>to create a dirty copy of the old cluster while the server is running, then shut down the old server and run <command>rsync --checksum</command>again to update the copy with any changes to make it consistent. ( <option>--checksum</option>is necessary because <command>rsync</command>only has file modification-time granularity of one second.) You might want to exclude some files, e.g. <filename>postmaster.pid</filename>, as documented in <xref linkend=\"backup-lowlevel-base-backup\">. If your file system supports file system snapshots or copy-on-write file copies, you can use that to make a backup of the old cluster and tablespaces, though the snapshot and copies must be created simultaneously or while the database server is down.</xref>"
msgstr ""

#: xml/ref/pgupgrade.xml:738(title)
msgid "See Also"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: xml/ref/pgupgrade.xml:0(None)
msgid "translator-credits"
msgstr ""


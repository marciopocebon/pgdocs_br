msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-04-29 18:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: xml/ref/create_view.xml:4(primary) xml/ref/create_view.xml:7(refentrytitle) xml/ref/create_view.xml:12(refname)
msgid "CREATE VIEW"
msgstr ""

#: xml/ref/create_view.xml:8(manvolnum)
msgid "7"
msgstr ""

#: xml/ref/create_view.xml:9(refmiscinfo)
msgid "SQL - Language Statements"
msgstr ""

#: xml/ref/create_view.xml:13(refpurpose)
msgid "define a new view"
msgstr ""

#: xml/ref/create_view.xml:18(replaceable) xml/ref/create_view.xml:94(replaceable)
msgid "name"
msgstr ""

#: xml/ref/create_view.xml:19(replaceable) xml/ref/create_view.xml:103(replaceable)
msgid "column_name"
msgstr ""

#: xml/ref/create_view.xml:21(replaceable) xml/ref/create_view.xml:114(replaceable)
msgid "view_option_name"
msgstr ""

#: xml/ref/create_view.xml:23(replaceable) xml/ref/create_view.xml:116(replaceable)
msgid "view_option_value"
msgstr ""

#: xml/ref/create_view.xml:25(replaceable) xml/ref/create_view.xml:154(replaceable)
msgid "query"
msgstr ""

#: xml/ref/create_view.xml:16(synopsis)
#, no-wrap
msgid "CREATE [ OR REPLACE ] [ TEMP | TEMPORARY ] [\n    RECURSIVE ] VIEW \n    <placeholder-1/>[ ( \n    <placeholder-2/>[, ...]\n    ) ] [ WITH ( \n    <placeholder-3/>[=\n    \n    <placeholder-4/>]\n    [, ... ] ) ] AS \n    <placeholder-5/>[ WITH [\n    CASCADED | LOCAL ] CHECK OPTION ]"
msgstr ""

#: xml/ref/create_view.xml:29(title)
msgid "Description"
msgstr ""

#: xml/ref/create_view.xml:30(para)
msgid "<command>CREATE VIEW</command>defines a view of a query. The view is not physically materialized. Instead, the query is run every time the view is referenced in a query."
msgstr ""

#: xml/ref/create_view.xml:34(para)
msgid "<command>CREATE OR REPLACE VIEW</command>is similar, but if a view of the same name already exists, it is replaced. The new query must generate the same columns that were generated by the existing view query (that is, the same column names in the same order and with the same data types), but it may add additional columns to the end of the list. The calculations giving rise to the output columns may be completely different."
msgstr ""

#: xml/ref/create_view.xml:42(para)
msgid "If a schema name is given (for example, <literal>CREATE VIEW myschema.myview ...</literal>) then the view is created in the specified schema. Otherwise it is created in the current schema. Temporary views exist in a special schema, so a schema name cannot be given when creating a temporary view. The name of the view must be distinct from the name of any other view, table, sequence, index or foreign table in the same schema."
msgstr ""

#: xml/ref/create_view.xml:52(title)
msgid "Parameters"
msgstr ""

#: xml/ref/create_view.xml:55(term)
msgid "<literal>TEMPORARY</literal>or <literal>TEMP</literal>"
msgstr ""

#: xml/ref/create_view.xml:59(para)
msgid "If specified, the view is created as a temporary view. Temporary views are automatically dropped at the end of the current session. Existing permanent relations with the same name are not visible to the current session while the temporary view exists, unless they are referenced with schema-qualified names."
msgstr ""

#: xml/ref/create_view.xml:65(para)
msgid "If any of the tables referenced by the view are temporary, the view is created as a temporary view (whether <literal>TEMPORARY</literal>is specified or not)."
msgstr ""

#: xml/ref/create_view.xml:73(literal)
msgid "RECURSIVE"
msgstr ""

#: xml/ref/create_view.xml:76(para)
msgid "Creates a recursive view. The syntax <synopsis>CREATE RECURSIVE VIEW \n          <replaceable>name</replaceable>( \n          <replaceable>columns</replaceable>) AS SELECT \n          <replaceable>...</replaceable>;</synopsis>is equivalent to <synopsis>CREATE VIEW \n          <replaceable>name</replaceable>AS WITH RECURSIVE \n          <replaceable>name</replaceable>( \n          <replaceable>columns</replaceable>) AS (SELECT \n          <replaceable>...</replaceable>) SELECT \n          <replaceable>columns</replaceable>FROM \n          <replaceable>name</replaceable>;</synopsis>A view column list must be specified for a recursive view."
msgstr ""

#: xml/ref/create_view.xml:97(para)
msgid "The name (optionally schema-qualified) of a view to be created."
msgstr ""

#: xml/ref/create_view.xml:106(para)
msgid "An optional list of names to be used for columns of the view. If not given, the column names are deduced from the query."
msgstr ""

#: xml/ref/create_view.xml:113(literal)
msgid "WITH ( <placeholder-1/>[= <placeholder-2/>] [, ... ] )"
msgstr ""

#: xml/ref/create_view.xml:124(term)
msgid "<literal>check_option</literal>( <type>string</type>)"
msgstr ""

#: xml/ref/create_view.xml:128(para)
msgid "This parameter may be either <literal>local</literal>or <literal>cascaded</literal>, and is equivalent to specifying <literal>WITH [ CASCADED | LOCAL ] CHECK OPTION</literal>(see below). This option can be changed on existing views using <xref linkend=\"sql-alterview\">.</xref>"
msgstr ""

#: xml/ref/create_view.xml:139(term)
msgid "<literal>security_barrier</literal>( <type>boolean</type>)"
msgstr ""

#: xml/ref/create_view.xml:143(para)
msgid "This should be used if the view is intended to provide row-level security. See <xref linkend=\"rules-privileges\">for full details.</xref>"
msgstr ""

#: xml/ref/create_view.xml:120(para)
msgid "This clause specifies optional parameters for a view; the following parameters are supported: <placeholder-1/>"
msgstr ""

#: xml/ref/create_view.xml:157(para)
msgid "A <xref linkend=\"sql-select\">or <xref linkend=\"sql-values\">command which will provide the columns and rows of the view.</xref></xref>"
msgstr ""

#: xml/ref/create_view.xml:165(literal)
msgid "WITH [ CASCADED | LOCAL ] CHECK OPTION"
msgstr ""

#: xml/ref/create_view.xml:191(literal)
msgid "LOCAL"
msgstr ""

#: xml/ref/create_view.xml:194(para)
msgid "New rows are only checked against the conditions defined directly in the view itself. Any conditions defined on underlying base views are not checked (unless they also specify the <literal>CHECK OPTION</literal>)."
msgstr ""

#: xml/ref/create_view.xml:203(literal)
msgid "CASCADED"
msgstr ""

#: xml/ref/create_view.xml:206(para)
msgid "New rows are checked against the conditions of the view and all underlying base views. If the <literal>CHECK OPTION</literal>is specified, and neither <literal>LOCAL</literal>nor <literal>CASCADED</literal>is specified, then <literal>CASCADED</literal>is assumed."
msgstr ""

#: xml/ref/create_view.xml:168(para)
msgid "<indexterm zone=\"SQL-CREATEVIEW\"><primary>CHECK OPTION</primary></indexterm><indexterm zone=\"SQL-CREATEVIEW\"><primary>WITH CHECK OPTION</primary></indexterm>This option controls the behavior of automatically updatable views. When this option is specified, <command>INSERT</command>and <command>UPDATE</command>commands on the view will be checked to ensure that new rows satisfy the view-defining condition (that is, the new rows are checked to ensure that they are visible through the view). If they are not, the update will be rejected. If the <literal>CHECK OPTION</literal>is not specified, <command>INSERT</command>and <command>UPDATE</command>commands on the view are allowed to create rows that are not visible through the view. The following check options are supported: <placeholder-1/>"
msgstr ""

#: xml/ref/create_view.xml:216(para)
msgid "The <literal>CHECK OPTION</literal>may not be used with <literal>RECURSIVE</literal>views."
msgstr ""

#: xml/ref/create_view.xml:219(para)
msgid "Note that the <literal>CHECK OPTION</literal>is only supported on views that are automatically updatable, and do not have <literal>INSTEAD OF</literal>triggers or <literal>INSTEAD</literal>rules. If an automatically updatable view is defined on top of a base view that has <literal>INSTEAD OF</literal>triggers, then the <literal>LOCAL CHECK OPTION</literal>may be used to check the conditions on the automatically updatable view, but the conditions on the base view with <literal>INSTEAD OF</literal>triggers will not be checked (a cascaded check option will not cascade down to a trigger-updatable view, and any check options defined directly on a trigger-updatable view will be ignored). If the view or any of its base relations has an <literal>INSTEAD</literal>rule that causes the <command>INSERT</command>or <command>UPDATE</command>command to be rewritten, then all check options will be ignored in the rewritten query, including any checks from automatically updatable views defined on top of the relation with the <literal>INSTEAD</literal>rule."
msgstr ""

#: xml/ref/create_view.xml:246(title)
msgid "Notes"
msgstr ""

#: xml/ref/create_view.xml:247(para)
msgid "Use the <xref linkend=\"sql-dropview\">statement to drop views.</xref>"
msgstr ""

#: xml/ref/create_view.xml:252(programlisting)
#, no-wrap
msgid "CREATE VIEW vista AS SELECT 'Hello\n    World';"
msgstr ""

#: xml/ref/create_view.xml:259(programlisting)
#, no-wrap
msgid "CREATE VIEW vista AS SELECT text 'Hello World'\n    AS hello;"
msgstr ""

#: xml/ref/create_view.xml:250(para)
msgid "Be careful that the names and types of the view's columns will be assigned the way you want. For example: <placeholder-1/>is bad form in two ways: the column name defaults to <literal>?column?</literal>, and the column data type defaults to <type>unknown</type>. If you want a string literal in a view's result, use something like: <placeholder-2/>"
msgstr ""

#: xml/ref/create_view.xml:261(para)
msgid "Access to tables referenced in the view is determined by permissions of the view owner. In some cases, this can be used to provide secure but restricted access to the underlying tables. However, not all views are secure against tampering; see <xref linkend=\"rules-privileges\">for details. Functions called in the view are treated the same as if they had been called directly from the query using the view. Therefore the user of a view must have permissions to call all functions used by the view.</xref>"
msgstr ""

#: xml/ref/create_view.xml:271(para)
msgid "When <command>CREATE OR REPLACE VIEW</command>is used on an existing view, only the view's defining SELECT rule is changed. Other view properties, including ownership, permissions, and non-SELECT rules, remain unchanged. You must own the view to replace it (this includes being a member of the owning role)."
msgstr ""

#: xml/ref/create_view.xml:279(title)
msgid "Updatable Views"
msgstr ""

#: xml/ref/create_view.xml:282(primary)
msgid "updatable views"
msgstr ""

#: xml/ref/create_view.xml:293(para)
msgid "The view must have exactly one entry in its <literal>FROM</literal>list, which must be a table or another updatable view."
msgstr ""

#: xml/ref/create_view.xml:298(para)
msgid "The view definition must not contain <literal>WITH</literal>, <literal>DISTINCT</literal>, <literal>GROUP BY</literal>, <literal>HAVING</literal>, <literal>LIMIT</literal>, or <literal>OFFSET</literal>clauses at the top level."
msgstr ""

#: xml/ref/create_view.xml:307(para)
msgid "The view definition must not contain set operations ( <literal>UNION</literal>, <literal>INTERSECT</literal>or <literal>EXCEPT</literal>) at the top level."
msgstr ""

#: xml/ref/create_view.xml:314(para)
msgid "The view's select list must not contain any aggregates, window functions or set-returning functions."
msgstr ""

#: xml/ref/create_view.xml:284(para)
msgid "Simple views are automatically updatable: the system will allow <command>INSERT</command>, <command>UPDATE</command>and <command>DELETE</command>statements to be used on the view in the same way as on a regular table. A view is automatically updatable if it satisfies all of the following conditions: <placeholder-1/>"
msgstr ""

#: xml/ref/create_view.xml:319(para)
msgid "An automatically updatable view may contain a mix of updatable and non-updatable columns. A column is updatable if it is a simple reference to an updatable column of the underlying base relation; otherwise the column is read-only, and an error will be raised if an <command>INSERT</command>or <command>UPDATE</command>statement attempts to assign a value to it."
msgstr ""

#: xml/ref/create_view.xml:327(para)
msgid "If the view is automatically updatable the system will convert any <command>INSERT</command>, <command>UPDATE</command>or <command>DELETE</command>statement on the view into the corresponding statement on the underlying base relation. <command>INSERT</command>statements that have an <literal>ON CONFLICT UPDATE</literal>clause are fully supported."
msgstr ""

#: xml/ref/create_view.xml:336(para)
msgid "If an automatically updatable view contains a <literal>WHERE</literal>condition, the condition restricts which rows of the base relation are available to be modified by <command>UPDATE</command>and <command>DELETE</command>statements on the view. However, an <command>UPDATE</command>is allowed to change a row so that it no longer satisfies the <literal>WHERE</literal>condition, and thus is no longer visible through the view. Similarly, an <command>INSERT</command>command can potentially insert base-relation rows that do not satisfy the <literal>WHERE</literal>condition and thus are not visible through the view ( <literal>ON CONFLICT UPDATE</literal>may similarly affect an existing row not visible through the view). The <literal>CHECK OPTION</literal>may be used to prevent <command>INSERT</command>and <command>UPDATE</command>commands from creating such rows that are not visible through the view."
msgstr ""

#: xml/ref/create_view.xml:356(para)
msgid "If an automatically updatable view is marked with the <literal>security_barrier</literal>property then all the view's <literal>WHERE</literal>conditions (and any conditions using operators which are marked as <literal>LEAKPROOF</literal>) will always be evaluated before any conditions that a user of the view has added. See <xref linkend=\"rules-privileges\">for full details. Note that, due to this, rows which are not ultimately returned (because they do not pass the user's <literal>WHERE</literal>conditions) may still end up being locked. <command>EXPLAIN</command>can be used to see which conditions are applied at the relation level (and therefore do not lock rows) and which are not.</xref>"
msgstr ""

#: xml/ref/create_view.xml:371(para)
msgid "A more complex view that does not satisfy all these conditions is read-only by default: the system will not allow an insert, update, or delete on the view. You can get the effect of an updatable view by creating <literal>INSTEAD OF</literal>triggers on the view, which must convert attempted inserts, etc. on the view into appropriate actions on other tables. For more information see <xref linkend=\"sql-createtrigger\">. Another possibility is to create rules (see <xref linkend=\"sql-createrule\">), but in practice triggers are easier to understand and use correctly.</xref></xref>"
msgstr ""

#: xml/ref/create_view.xml:383(para)
msgid "Note that the user performing the insert, update or delete on the view must have the corresponding insert, update or delete privilege on the view. In addition the view's owner must have the relevant privileges on the underlying base relations, but the user performing the update does not need any permissions on the underlying base relations (see <xref linkend=\"rules-privileges\">).</xref>"
msgstr ""

#: xml/ref/create_view.xml:393(title)
msgid "Examples"
msgstr ""

#: xml/ref/create_view.xml:395(programlisting)
#, no-wrap
msgid "CREATE VIEW comedies AS SELECT * FROM films\n    WHERE kind = 'Comedy';"
msgstr ""

#: xml/ref/create_view.xml:394(para)
msgid "Create a view consisting of all comedy films: <placeholder-1/>This will create a view containing the columns that are in the <literal>film</literal>table at the time of view creation. Though <literal>*</literal>was used to create the view, columns added later to the table will not be part of the view."
msgstr ""

#: xml/ref/create_view.xml:404(programlisting)
#, no-wrap
msgid "CREATE VIEW universal_comedies AS SELECT * FROM\n    comedies WHERE classification = 'U' WITH LOCAL CHECK\n    OPTION;"
msgstr ""

#: xml/ref/create_view.xml:402(para)
msgid "Create a view with <literal>LOCAL CHECK OPTION</literal>: <placeholder-1/>This will create a view based on the <literal>comedies</literal>view, showing only films with <literal>kind = 'Comedy'</literal>and <literal>classification = 'U'</literal>. Any attempt to <command>INSERT</command>or <command>UPDATE</command>a row in the view will be rejected if the new row doesn't have <literal>classification = 'U'</literal>, but the film <literal>kind</literal>will not be checked."
msgstr ""

#: xml/ref/create_view.xml:417(programlisting)
#, no-wrap
msgid "CREATE VIEW pg_comedies AS SELECT * FROM\n    comedies WHERE classification = 'PG' WITH CASCADED CHECK\n    OPTION;"
msgstr ""

#: xml/ref/create_view.xml:415(para)
msgid "Create a view with <literal>CASCADED CHECK OPTION</literal>: <placeholder-1/>This will create a view that checks both the <literal>kind</literal>and <literal>classification</literal>of new rows."
msgstr ""

#: xml/ref/create_view.xml:425(programlisting)
#, no-wrap
msgid "CREATE VIEW comedies AS SELECT f.*,\n    country_code_to_name(f.country_code) AS country, (SELECT\n    avg(r.rating) FROM user_ratings r WHERE r.film_id = f.id) AS\n    avg_rating FROM films f WHERE f.kind =\n    'Comedy';"
msgstr ""

#: xml/ref/create_view.xml:423(para)
msgid "Create a view with a mix of updatable and non-updatable columns: <placeholder-1/>This view will support <command>INSERT</command>, <command>UPDATE</command>and <command>DELETE</command>. All the columns from the <literal>films</literal>table will be updatable, whereas the computed columns <literal>country</literal>and <literal>avg_rating</literal>will be read-only."
msgstr ""

#: xml/ref/create_view.xml:439(programlisting)
#, no-wrap
msgid "CREATE RECURSIVE VIEW nums_1_100 (n) AS VALUES\n    (1) UNION ALL SELECT n+1 FROM nums_1_100 WHERE n &lt;\n    100;"
msgstr ""

#: xml/ref/create_view.xml:437(para)
msgid "Create a recursive view consisting of the numbers from 1 to 100: <placeholder-1/>"
msgstr ""

#: xml/ref/create_view.xml:444(title)
msgid "Compatibility"
msgstr ""

#: xml/ref/create_view.xml:445(para)
msgid "<command>CREATE OR REPLACE VIEW</command>is a <productname>PostgreSQL</productname>language extension. So is the concept of a temporary view. The <literal>WITH ( ... )</literal>clause is an extension as well."
msgstr ""

#: xml/ref/create_view.xml:453(title)
msgid "See Also"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: xml/ref/create_view.xml:0(None)
msgid "translator-credits"
msgstr ""


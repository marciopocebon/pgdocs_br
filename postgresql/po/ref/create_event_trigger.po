msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-04-29 18:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: xml/ref/create_event_trigger.xml:4(primary) xml/ref/create_event_trigger.xml:7(refentrytitle) xml/ref/create_event_trigger.xml:12(refname)
msgid "CREATE EVENT TRIGGER"
msgstr ""

#: xml/ref/create_event_trigger.xml:8(manvolnum)
msgid "7"
msgstr ""

#: xml/ref/create_event_trigger.xml:9(refmiscinfo)
msgid "SQL - Language Statements"
msgstr ""

#: xml/ref/create_event_trigger.xml:13(refpurpose)
msgid "define a new event trigger"
msgstr ""

#: xml/ref/create_event_trigger.xml:17(replaceable) xml/ref/create_event_trigger.xml:40(replaceable)
msgid "name"
msgstr ""

#: xml/ref/create_event_trigger.xml:18(replaceable) xml/ref/create_event_trigger.xml:49(replaceable)
msgid "event"
msgstr ""

#: xml/ref/create_event_trigger.xml:19(replaceable) xml/ref/create_event_trigger.xml:60(replaceable)
msgid "filter_variable"
msgstr ""

#: xml/ref/create_event_trigger.xml:21(replaceable) xml/ref/create_event_trigger.xml:89(replaceable)
msgid "function_name"
msgstr ""

#: xml/ref/create_event_trigger.xml:16(synopsis)
#, no-wrap
msgid "CREATE EVENT TRIGGER \n    <placeholder-1/>ON \n    <placeholder-2/>[ WHEN \n    <placeholder-3/>IN\n    (filter_value [, ... ]) [ AND ... ] ] EXECUTE PROCEDURE \n    <placeholder-4/>()"
msgstr ""

#: xml/ref/create_event_trigger.xml:25(title)
msgid "Description"
msgstr ""

#: xml/ref/create_event_trigger.xml:26(para)
msgid "<command>CREATE EVENT TRIGGER</command>creates a new event trigger. Whenever the designated event occurs and the <literal>WHEN</literal>condition associated with the trigger, if any, is satisfied, the trigger function will be executed. For a general introduction to event triggers, see <xref linkend=\"event-triggers\">. The user who creates an event trigger becomes its owner.</xref>"
msgstr ""

#: xml/ref/create_event_trigger.xml:36(title)
msgid "Parameters"
msgstr ""

#: xml/ref/create_event_trigger.xml:43(para)
msgid "The name to give the new trigger. This name must be unique within the database."
msgstr ""

#: xml/ref/create_event_trigger.xml:52(para)
msgid "The name of the event that triggers a call to the given function. See <xref linkend=\"event-trigger-definition\">for more information on event names.</xref>"
msgstr ""

#: xml/ref/create_event_trigger.xml:64(para)
msgid "The name of a variable used to filter events. This makes it possible to restrict the firing of the trigger to a subset of the cases in which it is supported. Currently the only supported <replaceable class=\"parameter\"> filter_variable</replaceable>is <literal>TAG</literal>."
msgstr ""

#: xml/ref/create_event_trigger.xml:75(replaceable)
msgid "filter_value"
msgstr ""

#: xml/ref/create_event_trigger.xml:78(para)
msgid "A list of values for the associated <replaceable class=\"parameter\"> filter_variable</replaceable>for which the trigger should fire. For <literal>TAG</literal>, this means a list of command tags (e.g. <literal>'DROP FUNCTION'</literal>)."
msgstr ""

#: xml/ref/create_event_trigger.xml:93(para)
msgid "A user-supplied function that is declared as taking no argument and returning type <literal>event_trigger</literal>."
msgstr ""

#: xml/ref/create_event_trigger.xml:101(title)
msgid "Notes"
msgstr ""

#: xml/ref/create_event_trigger.xml:102(para)
msgid "Only superusers can create event triggers."
msgstr ""

#: xml/ref/create_event_trigger.xml:103(para)
msgid "Event triggers are disabled in single-user mode (see <xref linkend=\"app-postgres\">). If an erroneous event trigger disables the database so much that you can't even drop the trigger, restart in single-user mode and you'll be able to do that.</xref>"
msgstr ""

#: xml/ref/create_event_trigger.xml:110(title)
msgid "Examples"
msgstr ""

#: xml/ref/create_event_trigger.xml:113(programlisting)
#, no-wrap
msgid "CREATE OR REPLACE FUNCTION abort_any_command()\n    RETURNS event_trigger LANGUAGE plpgsql AS $$ BEGIN RAISE\n    EXCEPTION 'command % is disabled', tg_tag; END; $$; CREATE\n    EVENT TRIGGER abort_ddl ON ddl_command_start EXECUTE PROCEDURE\n    abort_any_command();"
msgstr ""

#: xml/ref/create_event_trigger.xml:111(para)
msgid "Forbid the execution of any <link linkend=\"ddl\">DDL</link>command: <placeholder-1/>"
msgstr ""

#: xml/ref/create_event_trigger.xml:120(title)
msgid "Compatibility"
msgstr ""

#: xml/ref/create_event_trigger.xml:121(para)
msgid "There is no <command>CREATE EVENT TRIGGER</command>statement in the SQL standard."
msgstr ""

#: xml/ref/create_event_trigger.xml:126(title)
msgid "See Also"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: xml/ref/create_event_trigger.xml:0(None)
msgid "translator-credits"
msgstr ""


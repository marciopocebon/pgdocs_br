msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-04-29 18:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: xml/ref/update.xml:4(primary) xml/ref/update.xml:7(refentrytitle) xml/ref/update.xml:12(refname)
msgid "UPDATE"
msgstr ""

#: xml/ref/update.xml:8(manvolnum)
msgid "7"
msgstr ""

#: xml/ref/update.xml:9(refmiscinfo)
msgid "SQL - Language Statements"
msgstr ""

#: xml/ref/update.xml:13(refpurpose)
msgid "update rows of a table"
msgstr ""

#: xml/ref/update.xml:17(replaceable) xml/ref/update.xml:81(replaceable)
msgid "with_query"
msgstr ""

#: xml/ref/update.xml:19(replaceable) xml/ref/update.xml:95(replaceable)
msgid "table_name"
msgstr ""

#: xml/ref/update.xml:21(replaceable) xml/ref/update.xml:113(replaceable)
msgid "alias"
msgstr ""

#: xml/ref/update.xml:22(replaceable) xml/ref/update.xml:25(replaceable) xml/ref/update.xml:29(replaceable) xml/ref/update.xml:128(replaceable)
msgid "column_name"
msgstr ""

#: xml/ref/update.xml:23(replaceable) xml/ref/update.xml:27(replaceable) xml/ref/update.xml:143(replaceable)
msgid "expression"
msgstr ""

#: xml/ref/update.xml:31(replaceable) xml/ref/update.xml:163(replaceable)
msgid "sub-SELECT"
msgstr ""

#: xml/ref/update.xml:33(replaceable) xml/ref/update.xml:179(replaceable)
msgid "from_list"
msgstr ""

#: xml/ref/update.xml:35(replaceable) xml/ref/update.xml:198(replaceable)
msgid "condition"
msgstr ""

#: xml/ref/update.xml:37(replaceable) xml/ref/update.xml:209(replaceable)
msgid "cursor_name"
msgstr ""

#: xml/ref/update.xml:39(replaceable) xml/ref/update.xml:226(replaceable)
msgid "output_expression"
msgstr ""

#: xml/ref/update.xml:41(replaceable) xml/ref/update.xml:242(replaceable)
msgid "output_name"
msgstr ""

#: xml/ref/update.xml:16(synopsis)
#, no-wrap
msgid "[ WITH [ RECURSIVE ] \n    <placeholder-1/>[, ...]\n    ] UPDATE [ ONLY ] \n    <placeholder-2/>[ * ] [\n    [ AS ] \n    <placeholder-3/>] SET { \n    <placeholder-4/>= { \n    <placeholder-5/>|\n    DEFAULT } | ( \n    <placeholder-6/>[, ...]\n    ) = ( { \n    <placeholder-7/>|\n    DEFAULT } [, ...] ) | ( \n    <placeholder-8/>[, ...]\n    ) = ( \n    <placeholder-9/>) } [,\n    ...] [ FROM \n    <placeholder-10/>] [ WHERE\n    \n    <placeholder-11/>| WHERE\n    CURRENT OF \n    <placeholder-12/>] [\n    RETURNING * | \n    <placeholder-13/>[\n    [ AS ] \n    <placeholder-14/>] [,\n    ...] ]"
msgstr ""

#: xml/ref/update.xml:45(title)
msgid "Description"
msgstr ""

#: xml/ref/update.xml:46(para)
msgid "<command>UPDATE</command>changes the values of the specified columns in all rows that satisfy the condition. Only the columns to be modified need be mentioned in the <literal>SET</literal>clause; columns not explicitly modified retain their previous values."
msgstr ""

#: xml/ref/update.xml:52(para)
msgid "There are two ways to modify a table using information contained in other tables in the database: using sub-selects, or specifying additional tables in the <literal>FROM</literal>clause. Which technique is more appropriate depends on the specific circumstances."
msgstr ""

#: xml/ref/update.xml:57(para)
msgid "The optional <literal>RETURNING</literal>clause causes <command>UPDATE</command>to compute and return value(s) based on each row actually updated. Any expression using the table's columns, and/or columns of other tables mentioned in <literal>FROM</literal>, can be computed. The new (post-update) values of the table's columns are used. The syntax of the <literal>RETURNING</literal>list is identical to that of the output list of <command>SELECT</command>."
msgstr ""

#: xml/ref/update.xml:67(para)
msgid "You must have the <literal>UPDATE</literal>privilege on the table, or at least on the column(s) that are listed to be updated. You must also have the <literal>SELECT</literal>privilege on any column whose values are read in the <replaceable class=\"parameter\">expressions</replaceable>or <replaceable class=\"parameter\">condition</replaceable>."
msgstr ""

#: xml/ref/update.xml:77(title)
msgid "Parameters"
msgstr ""

#: xml/ref/update.xml:84(para)
msgid "The <literal>WITH</literal>clause allows you to specify one or more subqueries that can be referenced by name in the <command>UPDATE</command>query. See <xref linkend=\"queries-with\">and <xref linkend=\"sql-select\">for details.</xref></xref>"
msgstr ""

#: xml/ref/update.xml:98(para)
msgid "The name (optionally schema-qualified) of the table to update. If <literal>ONLY</literal>is specified before the table name, matching rows are updated in the named table only. If <literal>ONLY</literal>is not specified, matching rows are also updated in any tables inheriting from the named table. Optionally, <literal>*</literal>can be specified after the table name to explicitly indicate that descendant tables are included."
msgstr ""

#: xml/ref/update.xml:116(para)
msgid "A substitute name for the target table. When an alias is provided, it completely hides the actual name of the table. For example, given <literal>UPDATE foo AS f</literal>, the remainder of the <command>UPDATE</command>statement must refer to this table as <literal>f</literal>not <literal>foo</literal>."
msgstr ""

#: xml/ref/update.xml:131(para)
msgid "The name of a column in the table named by <replaceable class=\"PARAMETER\">table_name</replaceable>. The column name can be qualified with a subfield name or array subscript, if needed. Do not include the table's name in the specification of a target column for example, <literal>UPDATE tab SET tab.col = 1</literal>is invalid."
msgstr ""

#: xml/ref/update.xml:146(para)
msgid "An expression to assign to the column. The expression can use the old values of this and other columns in the table."
msgstr ""

#: xml/ref/update.xml:153(literal)
msgid "DEFAULT"
msgstr ""

#: xml/ref/update.xml:156(para)
msgid "Set the column to its default value (which will be NULL if no specific default expression has been assigned to it)."
msgstr ""

#: xml/ref/update.xml:166(para)
msgid "A <literal>SELECT</literal>sub-query that produces as many output columns as are listed in the parenthesized column list preceding it. The sub-query must yield no more than one row when executed. If it yields one row, its column values are assigned to the target columns; if it yields no rows, NULL values are assigned to the target columns. The sub-query can refer to old values of the current row of the table being updated."
msgstr ""

#: xml/ref/update.xml:182(para)
msgid "A list of table expressions, allowing columns from other tables to appear in the <literal>WHERE</literal>condition and the update expressions. This is similar to the list of tables that can be specified in the <xref linkend=\"sql-from\" endterm=\"sql-from-title\">of a <command>SELECT</command>statement. Note that the target table must not appear in the <replaceable>from_list</replaceable>, unless you intend a self-join (in which case it must appear with an alias in the <replaceable>from_list</replaceable>).</xref>"
msgstr ""

#: xml/ref/update.xml:201(para)
msgid "An expression that returns a value of type <type>boolean</type>. Only rows for which this expression returns <literal>true</literal>will be updated."
msgstr ""

#: xml/ref/update.xml:212(para)
msgid "The name of the cursor to use in a <literal>WHERE CURRENT OF</literal>condition. The row to be updated is the one most recently fetched from this cursor. The cursor must be a non-grouping query on the <command>UPDATE</command>'s target table. Note that <literal>WHERE CURRENT OF</literal>cannot be specified together with a Boolean condition. See <xref linkend=\"sql-declare\">for more information about using cursors with <literal>WHERE CURRENT OF</literal>.</xref>"
msgstr ""

#: xml/ref/update.xml:230(para)
msgid "An expression to be computed and returned by the <command>UPDATE</command>command after each row is updated. The expression can use any column names of the table named by <replaceable class=\"PARAMETER\">table_name</replaceable>or table(s) listed in <literal>FROM</literal>. Write <literal>*</literal>to return all columns."
msgstr ""

#: xml/ref/update.xml:245(para)
msgid "A name to use for a returned column."
msgstr ""

#: xml/ref/update.xml:251(title)
msgid "Outputs"
msgstr ""

#: xml/ref/update.xml:252(para)
msgid "On successful completion, an <command>UPDATE</command>command returns a command tag of the form <screen>UPDATE \n    <replaceable class=\"parameter\">count</replaceable></screen>The <replaceable class=\"parameter\">count</replaceable>is the number of rows updated, including matched rows whose values did not change. Note that the number may be less than the number of rows that matched the <replaceable class=\"parameter\">condition</replaceable>when updates were suppressed by a <literal>BEFORE UPDATE</literal>trigger. If <replaceable class=\"parameter\">count</replaceable>is 0, no rows were updated by the query (this is not considered an error)."
msgstr ""

#: xml/ref/update.xml:267(para)
msgid "If the <command>UPDATE</command>command contains a <literal>RETURNING</literal>clause, the result will be similar to that of a <command>SELECT</command>statement containing the columns and values defined in the <literal>RETURNING</literal>list, computed over the row(s) updated by the command."
msgstr ""

#: xml/ref/update.xml:277(title)
msgid "Notes"
msgstr ""

#: xml/ref/update.xml:278(para)
msgid "When a <literal>FROM</literal>clause is present, what essentially happens is that the target table is joined to the tables mentioned in the <replaceable>from_list</replaceable>, and each output row of the join represents an update operation for the target table. When using <literal>FROM</literal>you should ensure that the join produces at most one output row for each row to be modified. In other words, a target row shouldn't join to more than one row from the other table(s). If it does, then only one of the join rows will be used to update the target row, but which one will be used is not readily predictable."
msgstr ""

#: xml/ref/update.xml:291(para)
msgid "Because of this indeterminacy, referencing other tables only within sub-selects is safer, though often harder to read and slower than using a join."
msgstr ""

#: xml/ref/update.xml:296(title)
msgid "Examples"
msgstr ""

#: xml/ref/update.xml:302(programlisting)
#, no-wrap
msgid "UPDATE films SET kind = 'Dramatic' WHERE kind =\n    'Drama';"
msgstr ""

#: xml/ref/update.xml:297(para)
msgid "Change the word <literal>Drama</literal>to <literal>Dramatic</literal>in the column <structfield>kind</structfield>of the table <structname>films</structname>: <placeholder-1/>"
msgstr ""

#: xml/ref/update.xml:307(programlisting)
#, no-wrap
msgid "UPDATE weather SET temp_lo = temp_lo+1, temp_hi\n    = temp_lo+15, prcp = DEFAULT WHERE city = 'San Francisco' AND\n    date = '2003-07-03';"
msgstr ""

#: xml/ref/update.xml:304(para)
msgid "Adjust temperature entries and reset precipitation to its default value in one row of the table <structname>weather</structname>: <placeholder-1/>"
msgstr ""

#: xml/ref/update.xml:312(programlisting)
#, no-wrap
msgid "UPDATE weather SET temp_lo = temp_lo+1, temp_hi\n    = temp_lo+15, prcp = DEFAULT WHERE city = 'San Francisco' AND\n    date = '2003-07-03' RETURNING temp_lo, temp_hi,\n    prcp;"
msgstr ""

#: xml/ref/update.xml:310(para)
msgid "Perform the same operation and return the updated entries: <placeholder-1/>"
msgstr ""

#: xml/ref/update.xml:318(programlisting)
#, no-wrap
msgid "UPDATE weather SET (temp_lo, temp_hi, prcp) =\n    (temp_lo+1, temp_lo+15, DEFAULT) WHERE city = 'San Francisco'\n    AND date = '2003-07-03';"
msgstr ""

#: xml/ref/update.xml:316(para)
msgid "Use the alternative column-list syntax to do the same update: <placeholder-1/>"
msgstr ""

#: xml/ref/update.xml:324(programlisting)
#, no-wrap
msgid "UPDATE employees SET sales_count = sales_count\n    + 1 FROM accounts WHERE accounts.name = 'Acme Corporation' AND\n    employees.id = accounts.sales_person;"
msgstr ""

#: xml/ref/update.xml:321(para)
msgid "Increment the sales count of the salesperson who manages the account for Acme Corporation, using the <literal>FROM</literal>clause syntax: <placeholder-1/>"
msgstr ""

#: xml/ref/update.xml:329(programlisting)
#, no-wrap
msgid "UPDATE employees SET sales_count = sales_count\n    + 1 WHERE id = (SELECT sales_person FROM accounts WHERE name =\n    'Acme Corporation');"
msgstr ""

#: xml/ref/update.xml:327(para)
msgid "Perform the same operation, using a sub-select in the <literal>WHERE</literal>clause: <placeholder-1/>"
msgstr ""

#: xml/ref/update.xml:334(programlisting)
#, no-wrap
msgid "UPDATE accounts SET (contact_first_name,\n    contact_last_name) = (SELECT first_name, last_name FROM\n    salesmen WHERE salesmen.id =\n    accounts.sales_id);"
msgstr ""

#: xml/ref/update.xml:339(programlisting)
#, no-wrap
msgid "UPDATE accounts SET contact_first_name =\n    first_name, contact_last_name = last_name FROM salesmen WHERE\n    salesmen.id = accounts.sales_id;"
msgstr ""

#: xml/ref/update.xml:332(para)
msgid "Update contact names in an accounts table to match the currently assigned salesmen: <placeholder-1/>A similar result could be accomplished with a join: <placeholder-2/>However, the second query may give unexpected results if <structname>salesmen</structname>. <structfield>id</structfield>is not a unique key, whereas the first query is guaranteed to raise an error if there are multiple <structfield>id</structfield>matches. Also, if there is no match for a particular <structname>accounts</structname>. <structfield>sales_id</structfield>entry, the first query will set the corresponding name fields to NULL, whereas the second query will not update that row at all."
msgstr ""

#: xml/ref/update.xml:355(programlisting)
#, no-wrap
msgid "UPDATE summary s SET (sum_x, sum_y, avg_x,\n    avg_y) = (SELECT sum(x), sum(y), avg(x), avg(y) FROM data d\n    WHERE d.group_id = s.group_id);"
msgstr ""

#: xml/ref/update.xml:353(para)
msgid "Update statistics in a summary table to match the current data: <placeholder-1/>"
msgstr ""

#: xml/ref/update.xml:362(programlisting)
#, no-wrap
msgid "BEGIN; -- other operations SAVEPOINT sp1;\n    INSERT INTO wines VALUES('Chateau Lafite 2003', '24'); --\n    Assume the above fails because of a unique key violation, -- so\n    now we issue these commands: ROLLBACK TO sp1; UPDATE wines SET\n    stock = stock + 24 WHERE winename = 'Chateau Lafite 2003'; --\n    continue with other operations, and eventually\n    COMMIT;"
msgstr ""

#: xml/ref/update.xml:358(para)
msgid "Attempt to insert a new stock item along with the quantity of stock. If the item already exists, instead update the stock count of the existing item. To do this without failing the entire transaction, use savepoints: <placeholder-1/>"
msgstr ""

#: xml/ref/update.xml:373(programlisting)
#, no-wrap
msgid "UPDATE films SET kind = 'Dramatic' WHERE\n    CURRENT OF c_films;"
msgstr ""

#: xml/ref/update.xml:369(para)
msgid "Change the <structfield>kind</structfield>column of the table <structname>films</structname>in the row on which the cursor <literal>c_films</literal>is currently positioned: <placeholder-1/>"
msgstr ""

#: xml/ref/update.xml:377(title)
msgid "Compatibility"
msgstr ""

#: xml/ref/update.xml:378(para)
msgid "This command conforms to the <acronym>SQL</acronym>standard, except that the <literal>FROM</literal>and <literal>RETURNING</literal>clauses are <productname>PostgreSQL</productname>extensions, as is the ability to use <literal>WITH</literal>with <command>UPDATE</command>."
msgstr ""

#: xml/ref/update.xml:386(para)
msgid "Some other database systems offer a <literal>FROM</literal>option in which the target table is supposed to be listed again within <literal>FROM</literal>. That is not how <productname>PostgreSQL</productname>interprets <literal>FROM</literal>. Be careful when porting applications that use this extension."
msgstr ""

#: xml/ref/update.xml:393(para)
msgid "According to the standard, the source value for a parenthesized sub-list of column names can be any row-valued expression yielding the correct number of columns. <productname>PostgreSQL</productname>only allows the source value to be a parenthesized list of expressions (a row constructor) or a sub- <literal>SELECT</literal>. An individual column's updated value can be specified as <literal>DEFAULT</literal>in the row-constructor case, but not inside a sub- <literal>SELECT</literal>."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: xml/ref/update.xml:0(None)
msgid "translator-credits"
msgstr ""


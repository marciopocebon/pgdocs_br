msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-04-29 18:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: xml/ref/create_transform.xml:4(primary) xml/ref/create_transform.xml:7(refentrytitle) xml/ref/create_transform.xml:12(refname)
msgid "CREATE TRANSFORM"
msgstr ""

#: xml/ref/create_transform.xml:8(manvolnum)
msgid "7"
msgstr ""

#: xml/ref/create_transform.xml:9(refmiscinfo)
msgid "SQL - Language Statements"
msgstr ""

#: xml/ref/create_transform.xml:13(refpurpose)
msgid "define a new transform"
msgstr ""

#: xml/ref/create_transform.xml:17(replaceable) xml/ref/create_transform.xml:75(replaceable)
msgid "type_name"
msgstr ""

#: xml/ref/create_transform.xml:18(replaceable) xml/ref/create_transform.xml:83(replaceable)
msgid "lang_name"
msgstr ""

#: xml/ref/create_transform.xml:19(replaceable)
msgid "from_sql_function_name"
msgstr ""

#: xml/ref/create_transform.xml:20(replaceable) xml/ref/create_transform.xml:23(replaceable)
msgid "argument_type"
msgstr ""

#: xml/ref/create_transform.xml:22(replaceable)
msgid "to_sql_function_name"
msgstr ""

#: xml/ref/create_transform.xml:16(synopsis)
#, no-wrap
msgid "CREATE [ OR REPLACE ] TRANSFORM FOR \n    <placeholder-1/>LANGUAGE \n    <placeholder-2/>( FROM SQL WITH FUNCTION \n    <placeholder-3/>( \n    <placeholder-4/>[, ...]), TO SQL WITH\n    FUNCTION \n    <placeholder-5/>( \n    <placeholder-6/>[, ...]) );"
msgstr ""

#: xml/ref/create_transform.xml:26(title)
msgid "Description"
msgstr ""

#: xml/ref/create_transform.xml:27(para)
msgid "<command>CREATE TRANSFORM</command>defines a new transform. <command>CREATE OR REPLACE TRANSFORM</command>will either create a new transform, or replace an existing definition."
msgstr ""

#: xml/ref/create_transform.xml:32(para)
msgid "A transform specifies how to adapt a data type to a procedural language. For example, when writing a function in PL/Python using the <type>hstore</type>type, PL/Python has no prior knowledge how to present <type>hstore</type>values in the Python environment. Language implementations usually default to using the text representation, but that is inconvenient when, for example, an associative array or a list would be more appropriate."
msgstr ""

#: xml/ref/create_transform.xml:44(para)
msgid "A <quote>from SQL</quote>function that converts the type from the SQL environment to the language. This function will be invoked on the arguments of a function written in the language."
msgstr ""

#: xml/ref/create_transform.xml:51(para)
msgid "A <quote>to SQL</quote>function that converts the type from the language to the SQL environment. This function will be invoked on the return value of a function written in the language."
msgstr ""

#: xml/ref/create_transform.xml:41(para)
msgid "A transform specifies two functions: <placeholder-1/>It is not necessary to provide both of these functions. If one is not specified, the language-specific default behavior will be used if necessary. (To prevent a transformation in a certain direction from happening at all, you could also write a transform function that always errors out.)"
msgstr ""

#: xml/ref/create_transform.xml:63(para)
msgid "To be able to create a transform, you must own and have <literal>USAGE</literal>privilege on the type, have <literal>USAGE</literal>privilege on the language, and own and have <literal>EXECUTE</literal>privilege on the from-SQL and to-SQL functions, if specified."
msgstr ""

#: xml/ref/create_transform.xml:71(title)
msgid "Parameters"
msgstr ""

#: xml/ref/create_transform.xml:78(para)
msgid "The name of the data type of the transform."
msgstr ""

#: xml/ref/create_transform.xml:86(para)
msgid "The name of the language of the transform."
msgstr ""

#: xml/ref/create_transform.xml:90(term)
msgid "<replaceable>from_sql_function_name</replaceable>( <replaceable>argument_type</replaceable>[, ...])"
msgstr ""

#: xml/ref/create_transform.xml:94(para)
msgid "The name of the function for converting the type from the SQL environment to the language. It must take one argument of type <type>internal</type>and return type <type>internal</type>. The actual argument will be of the type for the transform, and the function should be coded as if it were. (But it is not allowed to declare an SQL-level function function returning <type>internal</type>without at least one argument of type <type>internal</type>.) The actual return value will be something specific to the language implementation."
msgstr ""

#: xml/ref/create_transform.xml:109(term)
msgid "<replaceable>to_sql_function_name</replaceable>( <replaceable>argument_type</replaceable>[, ...])"
msgstr ""

#: xml/ref/create_transform.xml:113(para)
msgid "The name of the function for converting the type from the language to the SQL environment. It must take one argument of type <type>internal</type>and return the type that is the type for the transform. The actual argument value will be something specific to the language implementation."
msgstr ""

#: xml/ref/create_transform.xml:124(title)
msgid "Notes"
msgstr ""

#: xml/ref/create_transform.xml:125(para)
msgid "Use <xref linkend=\"sql-droptransform\">to remove transforms.</xref>"
msgstr ""

#: xml/ref/create_transform.xml:130(title)
msgid "Examples"
msgstr ""

#: xml/ref/create_transform.xml:135(programlisting)
#, no-wrap
msgid "CREATE TYPE hstore ...; CREATE LANGUAGE\n    plpythonu ...;"
msgstr ""

#: xml/ref/create_transform.xml:138(programlisting)
#, no-wrap
msgid "CREATE FUNCTION hstore_to_plpython(val\n    internal) RETURNS internal LANGUAGE C STRICT IMMUTABLE AS ...;\n    CREATE FUNCTION plpython_to_hstore(val internal) RETURNS hstore\n    LANGUAGE C STRICT IMMUTABLE AS ...;"
msgstr ""

#: xml/ref/create_transform.xml:143(programlisting)
#, no-wrap
msgid "CREATE TRANSFORM FOR hstore LANGUAGE plpythonu\n    ( FROM SQL WITH FUNCTION hstore_to_plpython(internal), TO SQL\n    WITH FUNCTION plpython_to_hstore(internal)\n    );"
msgstr ""

#: xml/ref/create_transform.xml:131(para)
msgid "To create a transform for type <type>hstore</type>and language <literal>plpythonu</literal>, first set up the type and the language: <placeholder-1/>Then create the necessary functions: <placeholder-2/>And finally create the transform to connect them all together: <placeholder-3/>In practice, these commands would be wrapped up in extensions."
msgstr ""

#: xml/ref/create_transform.xml:148(para)
msgid "The <filename>contrib</filename>section contains a number of extensions that provide transforms, which can serve as real-world examples."
msgstr ""

#: xml/ref/create_transform.xml:154(title)
msgid "Compatibility"
msgstr ""

#: xml/ref/create_transform.xml:155(para)
msgid "This form of <command>CREATE TRANSFORM</command>is a <productname>PostgreSQL</productname>extension. There is a <command>CREATE TRANSFORM</command>command in the <acronym>SQL</acronym>standard, but it is for adapting data types to client languages. That usage is not supported by <productname>PostgreSQL</productname>."
msgstr ""

#: xml/ref/create_transform.xml:164(title)
msgid "See Also"
msgstr ""

#: xml/ref/create_transform.xml:168(xref) xml/ref/create_transform.xml:167(xref) xml/ref/create_transform.xml:166(xref)
msgid ", <placeholder-1/>"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: xml/ref/create_transform.xml:0(None)
msgid "translator-credits"
msgstr ""


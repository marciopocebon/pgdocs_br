msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-04-29 18:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: xml/ref/alter_table.xml:4(primary) xml/ref/alter_table.xml:7(refentrytitle) xml/ref/alter_table.xml:12(refname)
msgid "ALTER TABLE"
msgstr ""

#: xml/ref/alter_table.xml:8(manvolnum)
msgid "7"
msgstr ""

#: xml/ref/alter_table.xml:9(refmiscinfo)
msgid "SQL - Language Statements"
msgstr ""

#: xml/ref/alter_table.xml:13(refpurpose)
msgid "change the definition of a table"
msgstr ""

#: xml/ref/alter_table.xml:17(replaceable) xml/ref/alter_table.xml:20(replaceable) xml/ref/alter_table.xml:26(replaceable) xml/ref/alter_table.xml:31(replaceable) xml/ref/alter_table.xml:34(replaceable) xml/ref/alter_table.xml:37(replaceable) xml/ref/alter_table.xml:859(replaceable)
msgid "name"
msgstr ""

#: xml/ref/alter_table.xml:18(replaceable) xml/ref/alter_table.xml:43(replaceable)
msgid "action"
msgstr ""

#: xml/ref/alter_table.xml:22(replaceable) xml/ref/alter_table.xml:45(replaceable) xml/ref/alter_table.xml:51(replaceable) xml/ref/alter_table.xml:53(replaceable) xml/ref/alter_table.xml:61(replaceable) xml/ref/alter_table.xml:65(replaceable) xml/ref/alter_table.xml:67(replaceable) xml/ref/alter_table.xml:69(replaceable) xml/ref/alter_table.xml:73(replaceable) xml/ref/alter_table.xml:77(replaceable) xml/ref/alter_table.xml:81(replaceable) xml/ref/alter_table.xml:876(replaceable)
msgid "column_name"
msgstr ""

#: xml/ref/alter_table.xml:23(replaceable) xml/ref/alter_table.xml:884(replaceable)
msgid "new_column_name"
msgstr ""

#: xml/ref/alter_table.xml:28(replaceable) xml/ref/alter_table.xml:87(replaceable) xml/ref/alter_table.xml:90(replaceable) xml/ref/alter_table.xml:92(replaceable) xml/ref/alter_table.xml:136(replaceable) xml/ref/alter_table.xml:919(replaceable)
msgid "constraint_name"
msgstr ""

#: xml/ref/alter_table.xml:29(replaceable)
msgid "new_constraint_name"
msgstr ""

#: xml/ref/alter_table.xml:32(replaceable) xml/ref/alter_table.xml:893(replaceable)
msgid "new_name"
msgstr ""

#: xml/ref/alter_table.xml:35(replaceable) xml/ref/alter_table.xml:1036(replaceable)
msgid "new_schema"
msgstr ""

#: xml/ref/alter_table.xml:38(replaceable)
msgid "role_name"
msgstr ""

#: xml/ref/alter_table.xml:40(replaceable) xml/ref/alter_table.xml:114(replaceable) xml/ref/alter_table.xml:1026(replaceable)
msgid "new_tablespace"
msgstr ""

#: xml/ref/alter_table.xml:42(phrase)
msgid "where <placeholder-1/>is one of:"
msgstr ""

#: xml/ref/alter_table.xml:46(replaceable) xml/ref/alter_table.xml:55(replaceable) xml/ref/alter_table.xml:901(replaceable)
msgid "data_type"
msgstr ""

#: xml/ref/alter_table.xml:48(replaceable) xml/ref/alter_table.xml:57(replaceable)
msgid "collation"
msgstr ""

#: xml/ref/alter_table.xml:49(replaceable)
msgid "column_constraint"
msgstr ""

#: xml/ref/alter_table.xml:59(replaceable) xml/ref/alter_table.xml:63(replaceable)
msgid "expression"
msgstr ""

#: xml/ref/alter_table.xml:71(replaceable)
msgid "integer"
msgstr ""

#: xml/ref/alter_table.xml:74(replaceable) xml/ref/alter_table.xml:79(replaceable) xml/ref/alter_table.xml:251(replaceable) xml/ref/alter_table.xml:258(replaceable)
msgid "attribute_option"
msgstr ""

#: xml/ref/alter_table.xml:75(replaceable) xml/ref/alter_table.xml:118(replaceable) xml/ref/alter_table.xml:253(replaceable) xml/ref/alter_table.xml:641(replaceable) xml/ref/alter_table.xml:999(replaceable)
msgid "value"
msgstr ""

#: xml/ref/alter_table.xml:83(replaceable) xml/ref/alter_table.xml:338(replaceable) xml/ref/alter_table.xml:910(replaceable)
msgid "table_constraint"
msgstr ""

#: xml/ref/alter_table.xml:85(replaceable) xml/ref/alter_table.xml:133(replaceable) xml/ref/alter_table.xml:365(replaceable)
msgid "table_constraint_using_index"
msgstr ""

#: xml/ref/alter_table.xml:94(replaceable) xml/ref/alter_table.xml:96(replaceable) xml/ref/alter_table.xml:98(replaceable) xml/ref/alter_table.xml:100(replaceable) xml/ref/alter_table.xml:948(replaceable)
msgid "trigger_name"
msgstr ""

#: xml/ref/alter_table.xml:102(replaceable) xml/ref/alter_table.xml:104(replaceable) xml/ref/alter_table.xml:106(replaceable) xml/ref/alter_table.xml:108(replaceable)
msgid "rewrite_rule_name"
msgstr ""

#: xml/ref/alter_table.xml:112(replaceable) xml/ref/alter_table.xml:130(replaceable) xml/ref/alter_table.xml:138(replaceable) xml/ref/alter_table.xml:982(replaceable)
msgid "index_name"
msgstr ""

#: xml/ref/alter_table.xml:116(replaceable) xml/ref/alter_table.xml:120(replaceable) xml/ref/alter_table.xml:639(replaceable) xml/ref/alter_table.xml:677(replaceable) xml/ref/alter_table.xml:990(replaceable)
msgid "storage_parameter"
msgstr ""

#: xml/ref/alter_table.xml:122(replaceable) xml/ref/alter_table.xml:124(replaceable) xml/ref/alter_table.xml:690(replaceable) xml/ref/alter_table.xml:722(replaceable) xml/ref/alter_table.xml:1009(replaceable)
msgid "parent_table"
msgstr ""

#: xml/ref/alter_table.xml:125(replaceable) xml/ref/alter_table.xml:735(replaceable)
msgid "type_name"
msgstr ""

#: xml/ref/alter_table.xml:127(replaceable) xml/ref/alter_table.xml:1018(replaceable)
msgid "new_owner"
msgstr ""

#: xml/ref/alter_table.xml:132(phrase)
msgid "and <placeholder-1/>is:"
msgstr ""

#: xml/ref/alter_table.xml:16(synopsis)
#, no-wrap
msgid "ALTER TABLE [ IF EXISTS ] [ ONLY ] \n    <placeholder-1/>[ * ] \n    <placeholder-2/>[, ... ]\n    ALTER TABLE [ IF EXISTS ] [ ONLY ] \n    <placeholder-3/>[ * ] RENAME [\n    COLUMN ] \n    <placeholder-4/>TO \n    <placeholder-5/>ALTER TABLE [ IF EXISTS ] [ ONLY ]\n    \n    <placeholder-6/>[ * ] RENAME\n    CONSTRAINT \n    <placeholder-7/>TO \n    <placeholder-8/>ALTER TABLE [ IF EXISTS ] \n    <placeholder-9/>RENAME TO \n    <placeholder-10/>ALTER\n    TABLE [ IF EXISTS ] \n    <placeholder-11/>SET SCHEMA \n    <placeholder-12/>ALTER\n    TABLE ALL IN TABLESPACE \n    <placeholder-13/>[ OWNED BY \n    <placeholder-14/>[, ... ]\n    ] SET TABLESPACE \n    <placeholder-15/>[\n    NOWAIT ] \n    <placeholder-16/>ADD [ COLUMN ] \n    <placeholder-17/>\n    <placeholder-18/>[ COLLATE\n    \n    <placeholder-19/>] [ \n    <placeholder-20/>[\n    ... ] ] DROP [ COLUMN ] [ IF EXISTS ] \n    <placeholder-21/>[\n    RESTRICT | CASCADE ] ALTER [ COLUMN ] \n    <placeholder-22/>[ SET\n    DATA ] TYPE \n    <placeholder-23/>[ COLLATE\n    \n    <placeholder-24/>] [ USING\n    \n    <placeholder-25/>] ALTER\n    [ COLUMN ] \n    <placeholder-26/>SET\n    DEFAULT \n    <placeholder-27/>ALTER [\n    COLUMN ] \n    <placeholder-28/>DROP\n    DEFAULT ALTER [ COLUMN ] \n    <placeholder-29/>{ SET |\n    DROP } NOT NULL ALTER [ COLUMN ] \n    <placeholder-30/>SET\n    STATISTICS \n    <placeholder-31/>ALTER [\n    COLUMN ] \n    <placeholder-32/>SET ( \n    <placeholder-33/>= \n    <placeholder-34/>[, ... ] )\n    ALTER [ COLUMN ] \n    <placeholder-35/>RESET (\n    \n    <placeholder-36/>[,\n    ... ] ) ALTER [ COLUMN ] \n    <placeholder-37/>SET\n    STORAGE { PLAIN | EXTERNAL | EXTENDED | MAIN } ADD \n    <placeholder-38/>[\n    NOT VALID ] ADD \n    <placeholder-39/>ALTER CONSTRAINT \n    <placeholder-40/>[\n    DEFERRABLE | NOT DEFERRABLE ] [ INITIALLY DEFERRED | INITIALLY\n    IMMEDIATE ] VALIDATE CONSTRAINT \n    <placeholder-41/>DROP CONSTRAINT [ IF EXISTS ] \n    <placeholder-42/>[\n    RESTRICT | CASCADE ] DISABLE TRIGGER [ \n    <placeholder-43/>| ALL\n    | USER ] ENABLE TRIGGER [ \n    <placeholder-44/>| ALL\n    | USER ] ENABLE REPLICA TRIGGER \n    <placeholder-45/>ENABLE\n    ALWAYS TRIGGER \n    <placeholder-46/>DISABLE RULE \n    <placeholder-47/>ENABLE RULE \n    <placeholder-48/>ENABLE REPLICA RULE \n    <placeholder-49/>ENABLE ALWAYS RULE \n    <placeholder-50/>DISABLE ROW LEVEL SECURITY\n    ENABLE ROW LEVEL SECURITY FORCE ROW LEVEL SECURITY NO FORCE ROW\n    LEVEL SECURITY CLUSTER ON \n    <placeholder-51/>SET\n    WITHOUT CLUSTER SET WITH OIDS SET WITHOUT OIDS SET TABLESPACE \n    <placeholder-52/>SET\n    { LOGGED | UNLOGGED } SET ( \n    <placeholder-53/>=\n    \n    <placeholder-54/>[, ... ] )\n    RESET ( \n    <placeholder-55/>[, ... ] ) INHERIT \n    <placeholder-56/>NO\n    INHERIT \n    <placeholder-57/>OF \n    <placeholder-58/>NOT OF\n    OWNER TO { \n    <placeholder-59/>|\n    CURRENT_USER | SESSION_USER } REPLICA IDENTITY { DEFAULT |\n    USING INDEX \n    <placeholder-60/>| FULL |\n    NOTHING } \n    <placeholder-61/>[\n    CONSTRAINT \n    <placeholder-62/>] {\n    UNIQUE | PRIMARY KEY } USING INDEX \n    <placeholder-63/>[\n    DEFERRABLE | NOT DEFERRABLE ] [ INITIALLY DEFERRED | INITIALLY\n    IMMEDIATE ]"
msgstr ""

#: xml/ref/alter_table.xml:143(title)
msgid "Description"
msgstr ""

#: xml/ref/alter_table.xml:156(literal)
msgid "ADD COLUMN"
msgstr ""

#: xml/ref/alter_table.xml:159(para)
msgid "This form adds a new column to the table, using the same syntax as <xref linkend=\"SQL-CREATETABLE\">.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:166(literal)
msgid "DROP COLUMN [ IF EXISTS ]"
msgstr ""

#: xml/ref/alter_table.xml:169(para)
msgid "This form drops a column from a table. Indexes and table constraints involving the column will be automatically dropped as well. You will need to say <literal>CASCADE</literal>if anything outside the table depends on the column, for example, foreign key references or views. If <literal>IF EXISTS</literal>is specified and the column does not exist, no error is thrown. In this case a notice is issued instead."
msgstr ""

#: xml/ref/alter_table.xml:182(literal)
msgid "SET DATA TYPE"
msgstr ""

#: xml/ref/alter_table.xml:185(para)
msgid "This form changes the type of a column of a table. Indexes and simple table constraints involving the column will be automatically converted to use the new column type by reparsing the originally supplied expression. The optional <literal>COLLATE</literal>clause specifies a collation for the new column; if omitted, the collation is the default for the new column type. The optional <literal>USING</literal>clause specifies how to compute the new column value from the old; if omitted, the default conversion is the same as an assignment cast from old data type to new. A <literal>USING</literal>clause must be provided if there is no implicit or assignment cast from old to new type."
msgstr ""

#: xml/ref/alter_table.xml:203(term)
msgid "<literal>SET</literal>/ <literal>DROP DEFAULT</literal>"
msgstr ""

#: xml/ref/alter_table.xml:207(para)
msgid "These forms set or remove the default value for a column. Default values only apply in subsequent <command>INSERT</command>or <command>UPDATE</command>commands; they do not cause rows already in the table to change."
msgstr ""

#: xml/ref/alter_table.xml:215(term)
msgid "<literal>SET</literal>/ <literal>DROP NOT NULL</literal>"
msgstr ""

#: xml/ref/alter_table.xml:219(para)
msgid "These forms change whether a column is marked to allow null values or to reject null values. You can only use <literal>SET NOT NULL</literal>when the column contains no null values."
msgstr ""

#: xml/ref/alter_table.xml:228(literal)
msgid "SET STATISTICS"
msgstr ""

#: xml/ref/alter_table.xml:231(para)
msgid "This form sets the per-column statistics-gathering target for subsequent <xref linkend=\"sql-analyze\">operations. The target can be set in the range 0 to 10000; alternatively, set it to -1 to revert to using the system default statistics target ( <xref linkend=\"guc-default-statistics-target\">). For more information on the use of statistics by the <productname>PostgreSQL</productname>query planner, refer to <xref linkend=\"planner-stats\"> .</xref></xref></xref>"
msgstr ""

#: xml/ref/alter_table.xml:243(para)
msgid "<literal>SET STATISTICS</literal>acquires a <literal>SHARE UPDATE EXCLUSIVE</literal>lock."
msgstr ""

#: xml/ref/alter_table.xml:250(literal) xml/ref/alter_table.xml:638(literal)
msgid "SET ( <placeholder-1/>= <placeholder-2/>[, ... ] )"
msgstr ""

#: xml/ref/alter_table.xml:257(literal) xml/ref/alter_table.xml:676(literal)
msgid "RESET ( <placeholder-1/>[, ... ] )"
msgstr ""

#: xml/ref/alter_table.xml:262(para)
msgid "This form sets or resets per-attribute options. Currently, the only defined per-attribute options are <literal>n_distinct</literal>and <literal>n_distinct_inherited</literal>, which override the number-of-distinct-values estimates made by subsequent <xref linkend=\"sql-analyze\">operations. <literal>n_distinct</literal>affects the statistics for the table itself, while <literal>n_distinct_inherited</literal>affects the statistics gathered for the table plus its inheritance children. When set to a positive value, <command>ANALYZE</command>will assume that the column contains exactly the specified number of distinct nonnull values. When set to a negative value, which must be greater than or equal to -1, <command>ANALYZE</command>will assume that the number of distinct nonnull values in the column is linear in the size of the table; the exact count is to be computed by multiplying the estimated table size by the absolute value of the given number. For example, a value of -1 implies that all values in the column are distinct, while a value of -0.5 implies that each value appears twice on the average. This can be useful when the size of the table changes over time, since the multiplication by the number of rows in the table is not performed until query planning time. Specify a value of 0 to revert to estimating the number of distinct values normally. For more information on the use of statistics by the <productname>PostgreSQL</productname>query planner, refer to <xref linkend=\"planner-stats\">.</xref></xref>"
msgstr ""

#: xml/ref/alter_table.xml:294(para)
msgid "Changing per-attribute options acquires a <literal>SHARE UPDATE EXCLUSIVE</literal>lock."
msgstr ""

#: xml/ref/alter_table.xml:300(literal)
msgid "SET STORAGE"
msgstr ""

#: xml/ref/alter_table.xml:302(primary)
msgid "TOAST"
msgstr ""

#: xml/ref/alter_table.xml:303(secondary)
msgid "per-column storage settings"
msgstr ""

#: xml/ref/alter_table.xml:307(para)
msgid "This form sets the storage mode for a column. This controls whether this column is held inline or in a secondary <acronym>TOAST</acronym>table, and whether the data should be compressed or not. <literal>PLAIN</literal>must be used for fixed-length values such as <type>integer</type>and is inline, uncompressed. <literal>MAIN</literal>is for inline, compressible data. <literal>EXTERNAL</literal>is for external, uncompressed data, and <literal>EXTENDED</literal>is for external, compressed data. <literal>EXTENDED</literal>is the default for most data types that support non- <literal>PLAIN</literal>storage. Use of <literal>EXTERNAL</literal>will make substring operations on very large <type>text</type>and <type>bytea</type>values run faster, at the penalty of increased storage space. Note that <literal>SET STORAGE</literal>doesn't itself change anything in the table, it just sets the strategy to be pursued during future table updates. See <xref linkend=\"storage-toast\">for more information.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:337(literal)
msgid "ADD <placeholder-1/>[ NOT VALID ]"
msgstr ""

#: xml/ref/alter_table.xml:342(para)
msgid "This form adds a new constraint to a table using the same syntax as <xref linkend=\"SQL-CREATETABLE\">, plus the option <literal>NOT VALID</literal>, which is currently only allowed for foreign key and CHECK constraints. If the constraint is marked <literal>NOT VALID</literal>, the potentially-lengthy initial check to verify that all rows in the table satisfy the constraint is skipped. The constraint will still be enforced against subsequent inserts or updates (that is, they'll fail unless there is a matching row in the referenced table, in the case of foreign keys; and they'll fail unless the new row matches the specified check constraints). But the database will not assume that the constraint holds for all rows in the table, until it is validated by using the <literal>VALIDATE CONSTRAINT</literal>option.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:364(literal)
msgid "ADD <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:369(para)
msgid "This form adds a new <literal>PRIMARY KEY</literal>or <literal>UNIQUE</literal>constraint to a table based on an existing unique index. All the columns of the index will be included in the constraint."
msgstr ""

#: xml/ref/alter_table.xml:374(para)
msgid "The index cannot have expression columns nor be a partial index. Also, it must be a b-tree index with default sort ordering. These restrictions ensure that the index is equivalent to one that would be built by a regular <literal>ADD PRIMARY KEY</literal>or <literal>ADD UNIQUE</literal>command."
msgstr ""

#: xml/ref/alter_table.xml:381(para)
msgid "If <literal>PRIMARY KEY</literal>is specified, and the index's columns are not already marked <literal>NOT NULL</literal>, then this command will attempt to do <literal>ALTER COLUMN SET NOT NULL</literal>against each such column. That requires a full table scan to verify the column(s) contain no nulls. In all other cases, this is a fast operation."
msgstr ""

#: xml/ref/alter_table.xml:390(para)
msgid "If a constraint name is provided then the index will be renamed to match the constraint name. Otherwise the constraint will be named the same as the index."
msgstr ""

#: xml/ref/alter_table.xml:394(para)
msgid "After this command is executed, the index is <quote>owned</quote>by the constraint, in the same way as if the index had been built by a regular <literal>ADD PRIMARY KEY</literal>or <literal>ADD UNIQUE</literal>command. In particular, dropping the constraint will make the index disappear too."
msgstr ""

#: xml/ref/alter_table.xml:402(para)
msgid "Adding a constraint using an existing index can be helpful in situations where a new constraint needs to be added without blocking table updates for a long time. To do that, create the index using <command>CREATE INDEX CONCURRENTLY</command>, and then install it as an official constraint using this syntax. See the example below."
msgstr ""

#: xml/ref/alter_table.xml:414(literal)
msgid "ALTER CONSTRAINT"
msgstr ""

#: xml/ref/alter_table.xml:417(para)
msgid "This form alters the attributes of a constraint that was previously created. Currently only foreign key constraints may be altered."
msgstr ""

#: xml/ref/alter_table.xml:424(literal)
msgid "VALIDATE CONSTRAINT"
msgstr ""

#: xml/ref/alter_table.xml:427(para)
msgid "This form validates a foreign key or check constraint that was previously created as <literal>NOT VALID</literal>, by scanning the table to ensure there are no rows for which the constraint is not satisfied. Nothing happens if the constraint is already marked valid."
msgstr ""

#: xml/ref/alter_table.xml:433(para)
msgid "Validation can be a long process on larger tables. The value of separating validation from initial creation is that you can defer validation to less busy times, or can be used to give additional time to correct pre-existing errors while preventing new errors. Note also that validation on its own does not prevent normal write commands against the table while it runs."
msgstr ""

#: xml/ref/alter_table.xml:440(para)
msgid "Validation acquires only a <literal>SHARE UPDATE EXCLUSIVE</literal>lock on the table being altered. If the constraint is a foreign key then a <literal>ROW SHARE</literal>lock is also required on the table referenced by the constraint."
msgstr ""

#: xml/ref/alter_table.xml:450(literal)
msgid "DROP CONSTRAINT [ IF EXISTS ]"
msgstr ""

#: xml/ref/alter_table.xml:453(para)
msgid "This form drops the specified constraint on a table. If <literal>IF EXISTS</literal>is specified and the constraint does not exist, no error is thrown. In this case a notice is issued instead."
msgstr ""

#: xml/ref/alter_table.xml:461(term)
msgid "<literal>DISABLE</literal>/ <literal>ENABLE [ REPLICA | ALWAYS ] TRIGGER</literal>"
msgstr ""

#: xml/ref/alter_table.xml:466(para)
msgid "These forms configure the firing of trigger(s) belonging to the table. A disabled trigger is still known to the system, but is not executed when its triggering event occurs. For a deferred trigger, the enable status is checked when the event occurs, not when the trigger function is actually executed. One can disable or enable a single trigger specified by name, or all triggers on the table, or only user triggers (this option excludes internally generated constraint triggers such as those that are used to implement foreign key constraints or deferrable uniqueness and exclusion constraints). Disabling or enabling internally generated constraint triggers requires superuser privileges; it should be done with caution since of course the integrity of the constraint cannot be guaranteed if the triggers are not executed. The trigger firing mechanism is also affected by the configuration variable <xref linkend=\"guc-session-replication-role\">. Simply enabled triggers will fire when the replication role is <quote>origin</quote>(the default) or <quote>local</quote>. Triggers configured as <literal>ENABLE REPLICA</literal>will only fire if the session is in <quote>replica</quote>mode, and triggers configured as <literal>ENABLE ALWAYS</literal>will fire regardless of the current replication mode.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:492(para)
msgid "This command acquires a <literal>SHARE ROW EXCLUSIVE</literal>lock."
msgstr ""

#: xml/ref/alter_table.xml:497(term)
msgid "<literal>DISABLE</literal>/ <literal>ENABLE [ REPLICA | ALWAYS ] RULE</literal>"
msgstr ""

#: xml/ref/alter_table.xml:501(para)
msgid "These forms configure the firing of rewrite rules belonging to the table. A disabled rule is still known to the system, but is not applied during query rewriting. The semantics are as for disabled/enabled triggers. This configuration is ignored for <literal>ON SELECT</literal>rules, which are always applied in order to keep views working even if the current session is in a non-default replication role."
msgstr ""

#: xml/ref/alter_table.xml:513(term)
msgid "<literal>DISABLE</literal>/ <literal>ENABLE ROW LEVEL SECURITY</literal>"
msgstr ""

#: xml/ref/alter_table.xml:517(para)
msgid "These forms control the application of row security policies belonging to the table. If enabled and no policies exist for the table, then a default-deny policy is applied. Note that policies can exist for a table even if row level security is disabled - in this case, the policies will NOT be applied and the policies will be ignored. See also <xref linkend=\"SQL-CREATEPOLICY\">.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:528(term)
msgid "<literal>NO FORCE</literal>/ <literal>FORCE ROW LEVEL SECURITY</literal>"
msgstr ""

#: xml/ref/alter_table.xml:532(para)
msgid "These forms control the application of row security policies belonging to the table when the user is the table owner. If enabled, row level security policies will be applied when the user is the table owner. If disabled (the default) then row level security will not be applied when the user is the table owner. See also <xref linkend=\"SQL-CREATEPOLICY\">.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:543(literal)
msgid "CLUSTER ON"
msgstr ""

#: xml/ref/alter_table.xml:546(para)
msgid "This form selects the default index for future <xref linkend=\"SQL-CLUSTER\">operations. It does not actually re-cluster the table.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:549(para) xml/ref/alter_table.xml:562(para)
msgid "Changing cluster options acquires a <literal>SHARE UPDATE EXCLUSIVE</literal>lock."
msgstr ""

#: xml/ref/alter_table.xml:555(literal)
msgid "SET WITHOUT CLUSTER"
msgstr ""

#: xml/ref/alter_table.xml:558(para)
msgid "This form removes the most recently used <xref linkend=\"SQL-CLUSTER\">index specification from the table. This affects future cluster operations that don't specify an index.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:568(literal)
msgid "SET WITH OIDS"
msgstr ""

#: xml/ref/alter_table.xml:571(para)
msgid "This form adds an <literal>oid</literal>system column to the table (see <xref linkend=\"ddl-system-columns\">). It does nothing if the table already has OIDs.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:575(para)
msgid "Note that this is not equivalent to <literal>ADD COLUMN oid oid</literal>; that would add a normal column that happened to be named <literal>oid</literal>, not a system column."
msgstr ""

#: xml/ref/alter_table.xml:583(literal)
msgid "SET WITHOUT OIDS"
msgstr ""

#: xml/ref/alter_table.xml:586(para)
msgid "This form removes the <literal>oid</literal>system column from the table. This is exactly equivalent to <literal>DROP COLUMN oid RESTRICT</literal>, except that it will not complain if there is already no <literal>oid</literal>column."
msgstr ""

#: xml/ref/alter_table.xml:596(literal)
msgid "SET TABLESPACE"
msgstr ""

#: xml/ref/alter_table.xml:599(para)
msgid "This form changes the table's tablespace to the specified tablespace and moves the data file(s) associated with the table to the new tablespace. Indexes on the table, if any, are not moved; but they can be moved separately with additional <literal>SET TABLESPACE</literal>commands. All tables in the current database in a tablespace can be moved by using the <literal>ALL IN TABLESPACE</literal>form, which will lock all tables to be moved first and then move each one. This form also supports <literal>OWNED BY</literal>, which will only move tables owned by the roles specified. If the <literal>NOWAIT</literal>option is specified then the command will fail if it is unable to acquire all of the locks required immediately. Note that system catalogs are not moved by this command, use <command>ALTER DATABASE</command>or explicit <command>ALTER TABLE</command>invocations instead if desired. The <literal>information_schema</literal>relations are not considered part of the system catalogs and will be moved. See also <xref linkend=\"SQL-CREATETABLESPACE\">.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:627(literal)
msgid "SET { LOGGED | UNLOGGED }"
msgstr ""

#: xml/ref/alter_table.xml:630(para)
msgid "This form changes the table from unlogged to logged or vice-versa (see <xref linkend=\"SQL-CREATETABLE-UNLOGGED\">). It cannot be applied to a temporary table.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:645(para)
msgid "This form changes one or more storage parameters for the table. See <xref linkend=\"SQL-CREATETABLE-storage-parameters\" endterm=\"SQL-CREATETABLE-storage-parameters-title\">for details on the available parameters. Note that the table contents will not be modified immediately by this command; depending on the parameter you might need to rewrite the table to get the desired effects. That can be done with <link linkend=\"SQL-VACUUM\">VACUUM FULL</link>, <xref linkend=\"SQL-CLUSTER\">or one of the forms of <command>ALTER TABLE</command>that forces a table rewrite.</xref></xref>"
msgstr ""

#: xml/ref/alter_table.xml:659(para)
msgid "While <command>CREATE TABLE</command>allows <literal>OIDS</literal>to be specified in the <literal>WITH ( <replaceable class=\"PARAMETER\"> storage_parameter</replaceable>)</literal>syntax, <command>ALTER TABLE</command>does not treat <literal>OIDS</literal>as a storage parameter. Instead use the <literal>SET WITH OIDS</literal>and <literal>SET WITHOUT OIDS</literal>forms to change OID status."
msgstr ""

#: xml/ref/alter_table.xml:681(para)
msgid "This form resets one or more storage parameters to their defaults. As with <literal>SET</literal>, a table rewrite might be needed to update the table entirely."
msgstr ""

#: xml/ref/alter_table.xml:689(literal)
msgid "INHERIT <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:694(para)
msgid "This form adds the target table as a new child of the specified parent table. Subsequently, queries against the parent will include records of the target table. To be added as a child, the target table must already contain all the same columns as the parent (it could have additional columns, too). The columns must have matching data types, and if they have <literal>NOT NULL</literal>constraints in the parent then they must also have <literal>NOT NULL</literal>constraints in the child."
msgstr ""

#: xml/ref/alter_table.xml:705(para)
msgid "There must also be matching child-table constraints for all <literal>CHECK</literal>constraints of the parent, except those marked non-inheritable (that is, created with <literal>ALTER TABLE ... ADD CONSTRAINT ... NO INHERIT</literal>) in the parent, which are ignored; all child-table constraints matched must not be marked non-inheritable. Currently <literal>UNIQUE</literal>, <literal>PRIMARY KEY</literal>, and <literal>FOREIGN KEY</literal>constraints are not considered, but this might change in the future."
msgstr ""

#: xml/ref/alter_table.xml:721(literal)
msgid "NO INHERIT <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:726(para)
msgid "This form removes the target table from the list of children of the specified parent table. Queries against the parent table will no longer include records drawn from the target table."
msgstr ""

#: xml/ref/alter_table.xml:734(literal)
msgid "OF <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:739(para)
msgid "This form links the table to a composite type as though <command>CREATE TABLE OF</command>had formed it. The table's list of column names and types must precisely match that of the composite type; the presence of an <literal>oid</literal>system column is permitted to differ. The table must not inherit from any other table. These restrictions ensure that <command>CREATE TABLE OF</command>would permit an equivalent table definition."
msgstr ""

#: xml/ref/alter_table.xml:753(literal)
msgid "NOT OF"
msgstr ""

#: xml/ref/alter_table.xml:756(para)
msgid "This form dissociates a typed table from its type."
msgstr ""

#: xml/ref/alter_table.xml:762(literal)
msgid "OWNER"
msgstr ""

#: xml/ref/alter_table.xml:765(para)
msgid "This form changes the owner of the table, sequence, view, materialized view, or foreign table to the specified user."
msgstr ""

#: xml/ref/alter_table.xml:772(literal)
msgid "REPLICA IDENTITY"
msgstr ""

#: xml/ref/alter_table.xml:775(para)
msgid "This form changes the information which is written to the write-ahead log to identify rows which are updated or deleted. This option has no effect except when logical replication is in use. <literal>DEFAULT</literal>(the default for non-system tables) records the old values of the columns of the primary key, if any. <literal>USING INDEX</literal>records the old values of the columns covered by the named index, which must be unique, not partial, not deferrable, and include only columns marked <literal>NOT NULL</literal>. <literal>FULL</literal>records the old values of all columns in the row. <literal>NOTHING</literal>records no information about the old row. (This is the default for system tables.) In all cases, no old values are logged unless at least one of the columns that would be logged differs between the old and new versions of the row."
msgstr ""

#: xml/ref/alter_table.xml:798(literal)
msgid "RENAME"
msgstr ""

#: xml/ref/alter_table.xml:801(para)
msgid "The <literal>RENAME</literal>forms change the name of a table (or an index, sequence, view, materialized view, or foreign table), the name of an individual column in a table, or the name of a constraint of the table. There is no effect on the stored data."
msgstr ""

#: xml/ref/alter_table.xml:811(literal)
msgid "SET SCHEMA"
msgstr ""

#: xml/ref/alter_table.xml:814(para)
msgid "This form moves the table into another schema. Associated indexes, constraints, and sequences owned by table columns are moved as well."
msgstr ""

#: xml/ref/alter_table.xml:144(para)
msgid "<command>ALTER TABLE</command>changes the definition of an existing table. There are several subforms described below. Note that the lock level required may differ for each subform. An <literal>ACCESS EXCLUSIVE</literal>lock is held unless explicitly noted. When multiple subcommands are listed, the lock held will be the strictest one required from any subcommand. <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:820(para)
msgid "All the actions except <literal>RENAME</literal>, <literal>SET TABLESPACE</literal>and <literal>SET SCHEMA</literal>can be combined into a list of multiple alterations to apply in parallel. For example, it is possible to add several columns and/or alter the type of several columns in a single command. This is particularly useful with large tables, since only one pass over the table need be made."
msgstr ""

#: xml/ref/alter_table.xml:829(para)
msgid "You must own the table to use <command>ALTER TABLE</command>. To change the schema or tablespace of a table, you must also have <literal>CREATE</literal>privilege on the new schema or tablespace. To add the table as a new child of a parent table, you must own the parent table as well. To alter the owner, you must also be a direct or indirect member of the new owning role, and that role must have <literal>CREATE</literal>privilege on the table's schema. (These restrictions enforce that altering the owner doesn't do anything you couldn't do by dropping and recreating the table. However, a superuser can alter ownership of any table anyway.) To add a column or alter a column type or use the <literal>OF</literal>clause, you must also have <literal>USAGE</literal>privilege on the data type."
msgstr ""

#: xml/ref/alter_table.xml:846(title)
msgid "Parameters"
msgstr ""

#: xml/ref/alter_table.xml:850(literal)
msgid "IF EXISTS"
msgstr ""

#: xml/ref/alter_table.xml:853(para)
msgid "Do not throw an error if the table does not exist. A notice is issued in this case."
msgstr ""

#: xml/ref/alter_table.xml:862(para)
msgid "The name (optionally schema-qualified) of an existing table to alter. If <literal>ONLY</literal>is specified before the table name, only that table is altered. If <literal>ONLY</literal>is not specified, the table and all its descendant tables (if any) are altered. Optionally, <literal>*</literal>can be specified after the table name to explicitly indicate that descendant tables are included."
msgstr ""

#: xml/ref/alter_table.xml:879(para)
msgid "Name of a new or existing column."
msgstr ""

#: xml/ref/alter_table.xml:888(para)
msgid "New name for an existing column."
msgstr ""

#: xml/ref/alter_table.xml:896(para)
msgid "New name for the table."
msgstr ""

#: xml/ref/alter_table.xml:904(para)
msgid "Data type of the new column, or new data type for an existing column."
msgstr ""

#: xml/ref/alter_table.xml:914(para)
msgid "New table constraint for the table."
msgstr ""

#: xml/ref/alter_table.xml:923(para)
msgid "Name of a new or existing constraint."
msgstr ""

#: xml/ref/alter_table.xml:928(literal)
msgid "CASCADE"
msgstr ""

#: xml/ref/alter_table.xml:931(para)
msgid "Automatically drop objects that depend on the dropped column or constraint (for example, views referencing the column)."
msgstr ""

#: xml/ref/alter_table.xml:938(literal)
msgid "RESTRICT"
msgstr ""

#: xml/ref/alter_table.xml:941(para)
msgid "Refuse to drop the column or constraint if there are any dependent objects. This is the default behavior."
msgstr ""

#: xml/ref/alter_table.xml:951(para)
msgid "Name of a single trigger to disable or enable."
msgstr ""

#: xml/ref/alter_table.xml:957(literal)
msgid "ALL"
msgstr ""

#: xml/ref/alter_table.xml:960(para)
msgid "Disable or enable all triggers belonging to the table. (This requires superuser privilege if any of the triggers are internally generated constraint triggers such as those that are used to implement foreign key constraints or deferrable uniqueness and exclusion constraints.)"
msgstr ""

#: xml/ref/alter_table.xml:970(literal)
msgid "USER"
msgstr ""

#: xml/ref/alter_table.xml:973(para)
msgid "Disable or enable all triggers belonging to the table except for internally generated constraint triggers such as those that are used to implement foreign key constraints or deferrable uniqueness and exclusion constraints."
msgstr ""

#: xml/ref/alter_table.xml:985(para)
msgid "The name of an existing index."
msgstr ""

#: xml/ref/alter_table.xml:994(para)
msgid "The name of a table storage parameter."
msgstr ""

#: xml/ref/alter_table.xml:1002(para)
msgid "The new value for a table storage parameter. This might be a number or a word depending on the parameter."
msgstr ""

#: xml/ref/alter_table.xml:1012(para)
msgid "A parent table to associate or de-associate with this table."
msgstr ""

#: xml/ref/alter_table.xml:1021(para)
msgid "The user name of the new owner of the table."
msgstr ""

#: xml/ref/alter_table.xml:1030(para)
msgid "The name of the tablespace to which the table will be moved."
msgstr ""

#: xml/ref/alter_table.xml:1039(para)
msgid "The name of the schema to which the table will be moved."
msgstr ""

#: xml/ref/alter_table.xml:1046(title)
msgid "Notes"
msgstr ""

#: xml/ref/alter_table.xml:1047(para)
msgid "The key word <literal>COLUMN</literal>is noise and can be omitted."
msgstr ""

#: xml/ref/alter_table.xml:1049(para)
msgid "When a column is added with <literal>ADD COLUMN</literal>, all existing rows in the table are initialized with the column's default value (NULL if no <literal>DEFAULT</literal>clause is specified). If there is no <literal>DEFAULT</literal>clause, this is merely a metadata change and does not require any immediate update of the table's data; the added NULL values are supplied on readout, instead."
msgstr ""

#: xml/ref/alter_table.xml:1057(para)
msgid "Adding a column with a <literal>DEFAULT</literal>clause or changing the type of an existing column will require the entire table and its indexes to be rewritten. As an exception when changing the type of an existing column, if the <literal>USING</literal>clause does not change the column contents and the old type is either binary coercible to the new type or an unconstrained domain over the new type, a table rewrite is not needed; but any indexes on the affected columns must still be rebuilt. Adding or removing a system <literal>oid</literal>column also requires rewriting the entire table. Table and/or index rebuilds may take a significant amount of time for a large table; and will temporarily require as much as double the disk space."
msgstr ""

#: xml/ref/alter_table.xml:1071(para)
msgid "Adding a <literal>CHECK</literal>or <literal>NOT NULL</literal>constraint requires scanning the table to verify that existing rows meet the constraint, but does not require a table rewrite."
msgstr ""

#: xml/ref/alter_table.xml:1076(para)
msgid "The main reason for providing the option to specify multiple changes in a single <command>ALTER TABLE</command>is that multiple table scans or rewrites can thereby be combined into a single pass over the table."
msgstr ""

#: xml/ref/alter_table.xml:1081(para)
msgid "The <literal>DROP COLUMN</literal>form does not physically remove the column, but simply makes it invisible to SQL operations. Subsequent insert and update operations in the table will store a null value for the column. Thus, dropping a column is quick but it will not immediately reduce the on-disk size of your table, as the space occupied by the dropped column is not reclaimed. The space will be reclaimed over time as existing rows are updated. (These statements do not apply when dropping the system <literal>oid</literal>column; that is done with an immediate rewrite.)"
msgstr ""

#: xml/ref/alter_table.xml:1093(para)
msgid "To force immediate reclamation of space occupied by a dropped column, you can execute one of the forms of <command>ALTER TABLE</command>that performs a rewrite of the whole table. This results in reconstructing each row with the dropped column replaced by a null value."
msgstr ""

#: xml/ref/alter_table.xml:1098(para)
msgid "The rewriting forms of <command>ALTER TABLE</command>are not MVCC-safe. After a table rewrite, the table will appear empty to concurrent transactions, if they are using a snapshot taken before the rewrite occurred. See <xref linkend=\"mvcc-caveats\">for more details.</xref>"
msgstr ""

#: xml/ref/alter_table.xml:1104(para)
msgid "The <literal>USING</literal>option of <literal>SET DATA TYPE</literal>can actually specify any expression involving the old values of the row; that is, it can refer to other columns as well as the one being converted. This allows very general conversions to be done with the <literal>SET DATA TYPE</literal>syntax. Because of this flexibility, the <literal>USING</literal>expression is not applied to the column's default value (if any); the result might not be a constant expression as required for a default. This means that when there is no implicit or assignment cast from old to new type, <literal>SET DATA TYPE</literal>might fail to convert the default even though a <literal>USING</literal>clause is supplied. In such cases, drop the default with <literal>DROP DEFAULT</literal>, perform the <literal>ALTER TYPE</literal>, and then use <literal>SET DEFAULT</literal>to add a suitable new default. Similar considerations apply to indexes and constraints involving the column."
msgstr ""

#: xml/ref/alter_table.xml:1126(para)
msgid "If a table has any descendant tables, it is not permitted to add, rename, or change the type of a column, or rename an inherited constraint in the parent table without doing the same to the descendants. That is, <command>ALTER TABLE ONLY</command>will be rejected. This ensures that the descendants always have columns matching the parent."
msgstr ""

#: xml/ref/alter_table.xml:1133(para)
msgid "A recursive <literal>DROP COLUMN</literal>operation will remove a descendant table's column only if the descendant does not inherit that column from any other parents and never had an independent definition of the column. A nonrecursive <literal>DROP COLUMN</literal>(i.e., <command>ALTER TABLE ONLY ... DROP COLUMN</command>) never removes any descendant columns, but instead marks them as independently defined rather than inherited."
msgstr ""

#: xml/ref/alter_table.xml:1142(para)
msgid "The <literal>TRIGGER</literal>, <literal>CLUSTER</literal>, <literal>OWNER</literal>, and <literal>TABLESPACE</literal>actions never recurse to descendant tables; that is, they always act as though <literal>ONLY</literal>were specified. Adding a constraint recurses only for <literal>CHECK</literal>constraints that are not marked <literal>NO INHERIT</literal>."
msgstr ""

#: xml/ref/alter_table.xml:1152(para)
msgid "Changing any part of a system catalog table is not permitted."
msgstr ""

#: xml/ref/alter_table.xml:1154(para)
msgid "Refer to <xref linkend=\"sql-createtable\">for a further description of valid parameters. <xref linkend=\"ddl\">has further information on inheritance.</xref></xref>"
msgstr ""

#: xml/ref/alter_table.xml:1161(title)
msgid "Examples"
msgstr ""

#: xml/ref/alter_table.xml:1164(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors ADD COLUMN address\n    varchar(30);"
msgstr ""

#: xml/ref/alter_table.xml:1162(para)
msgid "To add a column of type <type>varchar</type>to a table: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1167(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors DROP COLUMN address\n    RESTRICT;"
msgstr ""

#: xml/ref/alter_table.xml:1166(para)
msgid "To drop a column from a table: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1171(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors ALTER COLUMN address\n    TYPE varchar(80), ALTER COLUMN name TYPE\n    varchar(100);"
msgstr ""

#: xml/ref/alter_table.xml:1169(para)
msgid "To change the types of two existing columns in one operation: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1178(programlisting)
#, no-wrap
msgid "ALTER TABLE foo ALTER COLUMN foo_timestamp SET\n    DATA TYPE timestamp with time zone USING timestamp with time\n    zone 'epoch' + foo_timestamp * interval '1\n    second';"
msgstr ""

#: xml/ref/alter_table.xml:1174(para)
msgid "To change an integer column containing Unix timestamps to <type>timestamp with time zone</type>via a <literal>USING</literal>clause: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1184(programlisting)
#, no-wrap
msgid "ALTER TABLE foo ALTER COLUMN foo_timestamp DROP\n    DEFAULT, ALTER COLUMN foo_timestamp TYPE timestamp with time\n    zone USING timestamp with time zone 'epoch' + foo_timestamp *\n    interval '1 second', ALTER COLUMN foo_timestamp SET DEFAULT\n    now();"
msgstr ""

#: xml/ref/alter_table.xml:1182(para)
msgid "The same, when the column has a default expression that won't automatically cast to the new data type: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1190(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors RENAME COLUMN address\n    TO city;"
msgstr ""

#: xml/ref/alter_table.xml:1189(para)
msgid "To rename an existing column: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1193(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors RENAME TO\n    suppliers;"
msgstr ""

#: xml/ref/alter_table.xml:1192(para)
msgid "To rename an existing table: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1196(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors RENAME CONSTRAINT\n    zipchk TO zip_check;"
msgstr ""

#: xml/ref/alter_table.xml:1195(para)
msgid "To rename an existing constraint: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1199(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors ALTER COLUMN street\n    SET NOT NULL;"
msgstr ""

#: xml/ref/alter_table.xml:1202(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors ALTER COLUMN street\n    DROP NOT NULL;"
msgstr ""

#: xml/ref/alter_table.xml:1198(para)
msgid "To add a not-null constraint to a column: <placeholder-1/>To remove a not-null constraint from a column: <placeholder-2/>"
msgstr ""

#: xml/ref/alter_table.xml:1206(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors ADD CONSTRAINT zipchk\n    CHECK (char_length(zipcode) = 5);"
msgstr ""

#: xml/ref/alter_table.xml:1204(para)
msgid "To add a check constraint to a table and all its children: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1210(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors ADD CONSTRAINT zipchk\n    CHECK (char_length(zipcode) = 5) NO\n    INHERIT;"
msgstr ""

#: xml/ref/alter_table.xml:1208(para)
msgid "To add a check constraint only to a table and not to its children: <placeholder-1/>(The check constraint will not be inherited by future children, either.)"
msgstr ""

#: xml/ref/alter_table.xml:1216(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors DROP CONSTRAINT\n    zipchk;"
msgstr ""

#: xml/ref/alter_table.xml:1214(para)
msgid "To remove a check constraint from a table and all its children: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1219(programlisting)
#, no-wrap
msgid "ALTER TABLE ONLY distributors DROP CONSTRAINT\n    zipchk;"
msgstr ""

#: xml/ref/alter_table.xml:1218(para)
msgid "To remove a check constraint from one table only: <placeholder-1/>(The check constraint remains in place for any child tables.)"
msgstr ""

#: xml/ref/alter_table.xml:1223(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors ADD CONSTRAINT distfk\n    FOREIGN KEY (address) REFERENCES addresses\n    (address);"
msgstr ""

#: xml/ref/alter_table.xml:1222(para)
msgid "To add a foreign key constraint to a table: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1228(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors ADD CONSTRAINT distfk\n    FOREIGN KEY (address) REFERENCES addresses (address) NOT VALID;\n    ALTER TABLE distributors VALIDATE CONSTRAINT\n    distfk;"
msgstr ""

#: xml/ref/alter_table.xml:1226(para)
msgid "To add a foreign key constraint to a table with the least impact on other work: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1233(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors ADD CONSTRAINT\n    dist_id_zipcode_key UNIQUE (dist_id,\n    zipcode);"
msgstr ""

#: xml/ref/alter_table.xml:1232(para)
msgid "To add a (multicolumn) unique constraint to a table: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1238(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors ADD PRIMARY KEY\n    (dist_id);"
msgstr ""

#: xml/ref/alter_table.xml:1236(para)
msgid "To add an automatically named primary key constraint to a table, noting that a table can only ever have one primary key: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1241(programlisting)
#, no-wrap
msgid "ALTER TABLE distributors SET TABLESPACE\n    fasttablespace;"
msgstr ""

#: xml/ref/alter_table.xml:1240(para)
msgid "To move a table to a different tablespace: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1244(programlisting)
#, no-wrap
msgid "ALTER TABLE myschema.distributors SET SCHEMA\n    yourschema;"
msgstr ""

#: xml/ref/alter_table.xml:1243(para)
msgid "To move a table to a different schema: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1248(programlisting)
#, no-wrap
msgid "CREATE UNIQUE INDEX CONCURRENTLY\n    dist_id_temp_idx ON distributors (dist_id); ALTER TABLE\n    distributors DROP CONSTRAINT distributors_pkey, ADD CONSTRAINT\n    distributors_pkey PRIMARY KEY USING INDEX\n    dist_id_temp_idx;"
msgstr ""

#: xml/ref/alter_table.xml:1246(para)
msgid "To recreate a primary key constraint, without blocking updates while the index is rebuilt: <placeholder-1/>"
msgstr ""

#: xml/ref/alter_table.xml:1255(title)
msgid "Compatibility"
msgstr ""

#: xml/ref/alter_table.xml:1256(para)
msgid "The forms <literal>ADD</literal>(without <literal>USING INDEX</literal>), <literal>DROP</literal>, <literal>SET DEFAULT</literal>, and <literal>SET DATA TYPE</literal>(without <literal>USING</literal>) conform with the SQL standard. The other forms are <productname>PostgreSQL</productname>extensions of the SQL standard. Also, the ability to specify more than one manipulation in a single <command>ALTER TABLE</command>command is an extension."
msgstr ""

#: xml/ref/alter_table.xml:1268(para)
msgid "<command>ALTER TABLE DROP COLUMN</command>can be used to drop the only column of a table, leaving a zero-column table. This is an extension of SQL, which disallows zero-column tables."
msgstr ""

#: xml/ref/alter_table.xml:1275(title)
msgid "See Also"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: xml/ref/alter_table.xml:0(None)
msgid "translator-credits"
msgstr ""

